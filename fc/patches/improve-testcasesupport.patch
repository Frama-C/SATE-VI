--- a/C/testcasesupport/io.c
+++ b/C/testcasesupport/io.c
@@ -56,7 +56,7 @@ void printSizeTLine (size_t sizeTNumber)
 
 void printHexCharLine (char charHex)
 {
-    printf("%02x\n", charHex);
+    printf("%02hhx\n", charHex);
 }
 
 void printWcharLine(wchar_t wideChar) 
@@ -76,7 +76,7 @@ void printUnsignedLine(unsigned unsignedNumber)
 
 void printHexUnsignedCharLine(unsigned char unsignedCharacter) 
 {
-    printf("%02x\n", unsignedCharacter);
+    printf("%02hhx\n", unsignedCharacter);
 }
 
 void printDoubleLine(double doubleNumber) 
@@ -94,7 +94,7 @@ void printBytesLine(const unsigned char * bytes, size_t numBytes)
     size_t i;
     for (i = 0; i < numBytes; ++i)
     {
-        printf("%02x", bytes[i]);
+        printf("%02hhx", bytes[i]);
     }
     puts("");	/* output newline */
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_01.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_01.c
index a39cc68..08185f6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_add_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
         char result = data + 1;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < CHAR_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_02.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_02.c
index 4c47094..207020d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_03.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_03.c
index 138ff78..2d2c980 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_04.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_04.c
index aedea4d..dbdd45d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_add_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_05.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_05.c
index bee716d..fc11761 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_add_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_06.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_06.c
index 8c79eec..06a2b9e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_add_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_07.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_07.c
index 121913e..8e147d5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_add_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_08.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_08.c
index 25c6101..32a647d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_add_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -63,7 +63,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -93,7 +93,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_09.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_09.c
index 01c45fa..c76383c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_10.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_10.c
index 85856c4..63ea368 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_11.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_11.c
index 4f72c31..0d0e58c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_12.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_12.c
index d004446..68d1363 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -70,12 +70,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_13.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_13.c
index 7079d61..bd9d540 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_14.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_14.c
index 3f370e5..a4f96fa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_15.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_15.c
index e4067d3..5c66cbc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -63,7 +63,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -100,7 +100,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_16.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_16.c
index 556edd4..d5735a6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -52,7 +52,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_17.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_17.c
index 0d601bc..9cbef28 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -52,7 +52,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_18.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_18.c
index dc22bed..065e490 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_add_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -48,7 +48,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_21.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_21.c
index 0515770..4f41f22 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_21.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_add_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -81,7 +81,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -109,7 +109,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_22a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_22a.c
index 62d7568..26ed29b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_add_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__char_rand_add_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__char_rand_add_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__char_rand_add_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_31.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_31.c
index b56d88d..f0f1c08 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_add_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -64,7 +64,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_32.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_32.c
index 08c1faa..cf371ef 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_add_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -78,7 +78,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_33.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_33.cpp
index 20341a5..5bf83a5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_33.cpp
@@ -28,7 +28,7 @@ void bad()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         {
@@ -68,7 +68,7 @@ static void goodB2G()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_34.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_34.c
index 8fdeb93..6dcf66d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_add_34_bad()
     CWE190_Integer_Overflow__char_rand_add_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -73,7 +73,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_add_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_41.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_41.c
index f350b10..86cb46f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_41.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_add_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -80,7 +80,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_42.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_42.c
index a342032..b0b0c3e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -66,7 +66,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_43.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_43.cpp
index 602e8e9..7b86fc2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_43.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__char_rand_add_43
 static void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 void bad()
@@ -67,7 +67,7 @@ static void goodG2B()
 static void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_44.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_44.c
index 3b312f7..ecb3abb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_44.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__char_rand_add_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_45.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_45.c
index 1adc87d..1150773 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_45.c
@@ -38,7 +38,7 @@ void CWE190_Integer_Overflow__char_rand_add_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_45_badData = data;
     badSink();
 }
@@ -89,7 +89,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_51a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_51a.c
index 5a8ab1b..f0bcb7f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_52a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_52a.c
index 8332f35..c268fb9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_53a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_53a.c
index 8b1b352..60a9000 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_54a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_54a.c
index 8006ac4..5728dfb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_61b.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_61b.c
index a9e5941..c295f53 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE190_Integer_Overflow__char_rand_add_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE190_Integer_Overflow__char_rand_add_61b_goodG2BSource(char data)
 char CWE190_Integer_Overflow__char_rand_add_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_62b.cpp
index 2e73450..cae08b7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__char_rand_add_62
 void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(char &data)
 void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_63a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_63a.c
index 405913c..6912241 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_64a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_64a.c
index 938b2d5..70e02ac 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_add_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_65a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_65a.c
index 3a2640b..a276385 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_add_65_bad()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_add_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_add_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_66a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_66a.c
index f489d52..aaf9a18 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_add_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_add_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_add_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_67a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_67a.c
index 0294649..b628bef 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_add_67_bad()
     CWE190_Integer_Overflow__char_rand_add_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_add_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_add_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_add_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_68a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_68a.c
index f28cfe3..de19ecb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_add_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_68_badData = data;
     CWE190_Integer_Overflow__char_rand_add_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_68_goodB2GData = data;
     CWE190_Integer_Overflow__char_rand_add_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_72a.cpp
index a2e693f..5aa0be2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_73a.cpp
index 22274e0..e20809d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_74a.cpp
index e1667e7..e47aad0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_81a.cpp
index 3bf5018..f3b4d73 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_add_81_base& baseObject = CWE190_Integer_Overflow__char_rand_add_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_add_81_base& baseObject = CWE190_Integer_Overflow__char_rand_add_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_82a.cpp
index 32b8c3c..74f5ee4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_add_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_add_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_add_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_bad.cpp
index 447a608..bbd7a7d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_add_83_bad::CWE190_Integer_Overflow__char_ran
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_add_83_bad::~CWE190_Integer_Overflow__char_rand_add_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_goodB2G.cpp
index 1df37c4..060b3dd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_add_83_goodB2G::CWE190_Integer_Overflow__char
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_add_83_goodB2G::~CWE190_Integer_Overflow__char_rand_add_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_bad.cpp
index 0802cd2..c15575a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_add_84_bad::CWE190_Integer_Overflow__char_ran
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_add_84_bad::~CWE190_Integer_Overflow__char_rand_add_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_goodB2G.cpp
index 5fa15c9..3ab8613 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_add_84_goodB2G::CWE190_Integer_Overflow__char
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_add_84_goodB2G::~CWE190_Integer_Overflow__char_rand_add_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_01.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_01.c
index 087af4d..b7d5524 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     if(data > 0) /* ensure we won't have an underflow */
     {
         /* POTENTIAL FLAW: if (data*2) > CHAR_MAX, this will overflow */
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     if(data > 0) /* ensure we won't have an underflow */
     {
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_02.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_02.c
index ce0286e..a8bb3fa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_03.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_03.c
index e67fc47..f4c7cbc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_04.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_04.c
index 0b216d7..6d1b232 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_05.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_05.c
index a2b55d3..667a986 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_06.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_06.c
index dfe82d7..85a39d0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_07.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_07.c
index fd3c7aa..f0abe2b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_08.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_08.c
index 7c9d4f6..26543d1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -97,7 +97,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_09.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_09.c
index 6990010..4f5b74d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_10.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_10.c
index 116c190..4ac2e71 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_11.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_11.c
index 45036b1..6911a59 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_12.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_12.c
index 7645886..bf08a63 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -74,12 +74,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_13.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_13.c
index 25c51db..1b73f8d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_14.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_14.c
index a906150..c25ae18 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_15.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_15.c
index de11b55..8ff7c54 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -104,7 +104,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_16.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_16.c
index 0e1b39b..9588956 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_17.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_17.c
index e87c3d7..435a77c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_18.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_18.c
index a8b5730..e57a99f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     if(data > 0) /* ensure we won't have an underflow */
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     if(data > 0) /* ensure we won't have an underflow */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_21.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_21.c
index 362d60c..d103ae5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -116,7 +116,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_22a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_22a.c
index f393dae..3429f2b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__char_rand_multiply_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__char_rand_multiply_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__char_rand_multiply_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_31.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_31.c
index b923e98..618b7ab 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_32.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_32.c
index a9619b0..4775c10 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_33.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_33.cpp
index e3803f9..c485e63 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_33.cpp
@@ -28,7 +28,7 @@ void bad()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         if(data > 0) /* ensure we won't have an underflow */
@@ -70,7 +70,7 @@ static void goodB2G()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         if(data > 0) /* ensure we won't have an underflow */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_34.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_34.c
index 623b9a2..a974ba4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_34_bad()
     CWE190_Integer_Overflow__char_rand_multiply_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_multiply_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_41.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_41.c
index f9c7835..8e044a3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -85,7 +85,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_42.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_42.c
index 7108f90..1367daa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_43.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_43.cpp
index 744976d..8c4f7e1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_43.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__char_rand_multiply_43
 static void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_44.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_44.c
index 2d36aad..1b91085 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -90,7 +90,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_45.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_45.c
index abf9a87..d182a82 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_45_badData = data;
     badSink();
 }
@@ -94,7 +94,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_51a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_51a.c
index 0131df4..efcc3a4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_52a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_52a.c
index 50db6ee..9135bdc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_53a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_53a.c
index 3877200..4f180b0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_54a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_54a.c
index 337e52f..0ef475f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_61b.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_61b.c
index 6edab33..4b72d92 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE190_Integer_Overflow__char_rand_multiply_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE190_Integer_Overflow__char_rand_multiply_61b_goodG2BSource(char data)
 char CWE190_Integer_Overflow__char_rand_multiply_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_62b.cpp
index 9921534..14fe342 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__char_rand_multiply_62
 void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(char &data)
 void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_63a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_63a.c
index c447c5c..c7caee4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_64a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_64a.c
index ec2a240..a3bd67b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_65a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_65a.c
index 5128971..62c50c3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_65_bad()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_multiply_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_multiply_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_66a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_66a.c
index 690c286..3f1146c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_multiply_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_multiply_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_67a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_67a.c
index 618536f..a7b9ac2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_67_bad()
     CWE190_Integer_Overflow__char_rand_multiply_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_multiply_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_multiply_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_multiply_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_68a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_68a.c
index fee459a..5df405a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_multiply_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_68_badData = data;
     CWE190_Integer_Overflow__char_rand_multiply_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_68_goodB2GData = data;
     CWE190_Integer_Overflow__char_rand_multiply_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_72a.cpp
index d3f8cfd..c79ccb3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_73a.cpp
index 0f77332..c99da4d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_74a.cpp
index 17b12fd..268452c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_81a.cpp
index 8d48973..ecf3886 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_multiply_81_base& baseObject = CWE190_Integer_Overflow__char_rand_multiply_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_multiply_81_base& baseObject = CWE190_Integer_Overflow__char_rand_multiply_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_82a.cpp
index 431dc95..2e31744 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_multiply_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_multiply_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_multiply_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_bad.cpp
index ea5d6a5..ab530d6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_multiply_83_bad::CWE190_Integer_Overflow__cha
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_multiply_83_bad::~CWE190_Integer_Overflow__char_rand_multiply_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G.cpp
index 8994a34..c8b6612 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G::CWE190_Integer_Overflow_
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G::~CWE190_Integer_Overflow__char_rand_multiply_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_bad.cpp
index c0bd21a..a766487 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_multiply_84_bad::CWE190_Integer_Overflow__cha
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_multiply_84_bad::~CWE190_Integer_Overflow__char_rand_multiply_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G.cpp
index 3ed0fe5..4db3f45 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G::CWE190_Integer_Overflow_
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G::~CWE190_Integer_Overflow__char_rand_multiply_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_01.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_01.c
index dde8bb5..e8e045a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_01.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_square_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: if (data*data) > CHAR_MAX, this will overflow */
         char result = data * data;
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data <= LONG_MAX && labs(data) <= (long)sqrt((double)CHAR_MAX))
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_02.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_02.c
index 6b48ac9..19a9693 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_02.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_03.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_03.c
index d813203..f472bdd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_03.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_04.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_04.c
index 8aa1379..b4d8fe6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_04.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__char_rand_square_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -58,7 +58,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_05.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_05.c
index e5810f7..730e8d7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_05.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__char_rand_square_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -58,7 +58,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_06.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_06.c
index bcec45c..fd6d5cc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_06.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_square_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_07.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_07.c
index 86a37db..ddaca23 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_07.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_square_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_08.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_08.c
index 6d616e6..39231a6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_08.c
@@ -41,7 +41,7 @@ void CWE190_Integer_Overflow__char_rand_square_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -65,7 +65,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_09.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_09.c
index b2ab7f8..f79b37a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_09.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_10.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_10.c
index b6cc6f4..56be3d5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_10.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_11.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_11.c
index 729af07..85dba56 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_11.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c
index 4d67384..e62dffa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_13.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_13.c
index d993035..6deae74 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_13.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_14.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_14.c
index 724ee7c..eb7639b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_14.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_15.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_15.c
index 306e355..9e3b8c3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_15.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -65,7 +65,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_16.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_16.c
index 033bb10..70ba59e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_16.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -54,7 +54,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_17.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_17.c
index a5474fc..163dad0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_17.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -54,7 +54,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_18.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_18.c
index 5aa65b5..ad45b2d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_18.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_square_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -50,7 +50,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_21.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_21.c
index 248ad36..90d64ba 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_21.c
@@ -41,7 +41,7 @@ void CWE190_Integer_Overflow__char_rand_square_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -111,7 +111,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_22a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_22a.c
index 4da5b5e..0d8fb86 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__char_rand_square_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__char_rand_square_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__char_rand_square_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_31.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_31.c
index 43d5072..734c795 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_31.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_square_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_32.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_32.c
index 7579237..05e8b8b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_32.c
@@ -30,7 +30,7 @@ void CWE190_Integer_Overflow__char_rand_square_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_33.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_33.cpp
index fcb7c7c..d960e84 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_33.cpp
@@ -30,7 +30,7 @@ void bad()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         {
@@ -70,7 +70,7 @@ static void goodB2G()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_34.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_34.c
index 27ebe62..d285859 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_34.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_square_34_bad()
     CWE190_Integer_Overflow__char_rand_square_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_square_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_41.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_41.c
index f23f684..24c1d72 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_41.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__char_rand_square_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -82,7 +82,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_42.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_42.c
index 57e8781..f7fd045 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_42.c
@@ -24,7 +24,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_43.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_43.cpp
index 79377e5..9753f73 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_43.cpp
@@ -27,7 +27,7 @@ namespace CWE190_Integer_Overflow__char_rand_square_43
 static void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_44.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_44.c
index fdc78d3..5c03fce 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_44.c
@@ -37,7 +37,7 @@ void CWE190_Integer_Overflow__char_rand_square_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -87,7 +87,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_45.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_45.c
index 8ac868e..54e0f62 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_45.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__char_rand_square_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_45_badData = data;
     badSink();
 }
@@ -91,7 +91,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_51a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_51a.c
index 9f97c54..d3b6a0f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_51a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_51b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_52a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_52a.c
index bccf48b..d8b11bc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_52a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_52b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_53a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_53a.c
index afc9ae9..42fe32c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_53a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_53b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_54a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_54a.c
index a0d5c7e..69d1d02 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_54a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_54b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_61b.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_61b.c
index 2d7868b..b306675 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_61b.c
@@ -24,7 +24,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE190_Integer_Overflow__char_rand_square_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -44,7 +44,7 @@ char CWE190_Integer_Overflow__char_rand_square_61b_goodG2BSource(char data)
 char CWE190_Integer_Overflow__char_rand_square_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_62b.cpp
index e7554a6..cae6eb0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__char_rand_square_62
 void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(char &data)
 void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_63a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_63a.c
index 93fa6cf..3cddad6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_63a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_63b_badSink(&data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_64a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_64a.c
index 5ac2d62..3ab43a6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_64a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_square_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_64b_badSink(&data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_65a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_65a.c
index 753864c..d6efff7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_65a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_square_65_bad()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_square_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -62,7 +62,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_square_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_66a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_66a.c
index 6851992..4c56140 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_66a.c
@@ -30,7 +30,7 @@ void CWE190_Integer_Overflow__char_rand_square_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_square_66b_badSink(dataArray);
@@ -63,7 +63,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_square_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_67a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_67a.c
index e64622a..7885c4f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_67a.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__char_rand_square_67_bad()
     CWE190_Integer_Overflow__char_rand_square_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_square_67b_badSink(myStruct);
 }
@@ -67,7 +67,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_square_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_square_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_68a.c b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_68a.c
index 88c0d82..167608e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_68a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_square_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_68_badData = data;
     CWE190_Integer_Overflow__char_rand_square_68b_badSink();
 }
@@ -63,7 +63,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_68_goodB2GData = data;
     CWE190_Integer_Overflow__char_rand_square_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_72a.cpp
index c8c1007..3ce615a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_73a.cpp
index 0cdff76..4326f58 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_74a.cpp
index da401b6..a433339 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_81a.cpp
index 0037ffe..d09d75c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_square_81_base& baseObject = CWE190_Integer_Overflow__char_rand_square_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE190_Integer_Overflow__char_rand_square_81_base& baseObject = CWE190_Integer_Overflow__char_rand_square_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_82a.cpp
index a9c30a3..d94367a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_square_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_square_82_base* baseObject = new CWE190_Integer_Overflow__char_rand_square_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_bad.cpp
index c2802ab..ecefc82 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_bad.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__char_rand_square_83_bad::CWE190_Integer_Overflow__char_
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_square_83_bad::~CWE190_Integer_Overflow__char_rand_square_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_goodB2G.cpp
index bee7848..08f1479 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_83_goodB2G.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__char_rand_square_83_goodB2G::CWE190_Integer_Overflow__c
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_square_83_goodB2G::~CWE190_Integer_Overflow__char_rand_square_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_bad.cpp
index 89a60fe..8de6d1b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_bad.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__char_rand_square_84_bad::CWE190_Integer_Overflow__char_
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_square_84_bad::~CWE190_Integer_Overflow__char_rand_square_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_goodB2G.cpp
index ce5902c..532d655 100644
--- a/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_84_goodB2G.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__char_rand_square_84_goodB2G::CWE190_Integer_Overflow__c
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE190_Integer_Overflow__char_rand_square_84_goodB2G::~CWE190_Integer_Overflow__char_rand_square_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_01.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_01.c
index a852ea8..daf7c91 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_add_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Adding 1 to data could cause an overflow */
         short result = data + 1;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < SHRT_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_02.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_02.c
index 4d8834e..34c60f0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_03.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_03.c
index 3741ca8..c3389c6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_04.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_04.c
index 2c84874..d79819e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_add_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_05.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_05.c
index 4ca73a0..4d59b7e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_add_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_06.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_06.c
index f8b6ae7..1d42a28 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_add_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_07.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_07.c
index 92c53af..013ccb0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_add_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_08.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_08.c
index 5834421..52631f3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_add_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -63,7 +63,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -93,7 +93,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_09.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_09.c
index 3af9c32..9123ca1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_10.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_10.c
index 3f911b1..dce071c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_11.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_11.c
index d1094b2..9a2c09b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_12.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_12.c
index 81bb7f4..e01ab3f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -70,12 +70,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_13.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_13.c
index 868d46c..19d6d7a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_14.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_14.c
index 83062d4..99fca41 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_15.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_15.c
index edd1c36..ef93dd8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -63,7 +63,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -100,7 +100,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_16.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_16.c
index fefcdde..817d9a4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -52,7 +52,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_17.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_17.c
index 4f9d1e5..1207910 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -52,7 +52,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_18.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_18.c
index 7cedf19..5e04b67 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_add_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -48,7 +48,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_21.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_21.c
index b92f479..77b8fe2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_21.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_add_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -81,7 +81,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -109,7 +109,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_22a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_22a.c
index c2ac762..e1b29df 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_add_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__short_rand_add_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__short_rand_add_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__short_rand_add_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_31.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_31.c
index c2d8ed2..3b209b2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_add_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -64,7 +64,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_32.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_32.c
index 020b9d6..6308b8d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_add_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -78,7 +78,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_33.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_33.cpp
index 56207e6..a14b2ef 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_33.cpp
@@ -28,7 +28,7 @@ void bad()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
@@ -68,7 +68,7 @@ static void goodB2G()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_34.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_34.c
index 0a8b086..0941923 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_add_34_bad()
     CWE190_Integer_Overflow__short_rand_add_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -73,7 +73,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_add_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_41.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_41.c
index 0675b72..097b7cc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_41.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_add_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -80,7 +80,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_42.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_42.c
index b5ee579..5c7f880 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -66,7 +66,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_43.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_43.cpp
index 6db4170..0a497e9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_43.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__short_rand_add_43
 static void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
@@ -67,7 +67,7 @@ static void goodG2B()
 static void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_44.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_44.c
index 4a9db97..ffa2d7d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_44.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__short_rand_add_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_45.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_45.c
index 8821e2e..62dd777 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_45.c
@@ -38,7 +38,7 @@ void CWE190_Integer_Overflow__short_rand_add_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_45_badData = data;
     badSink();
 }
@@ -89,7 +89,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_51a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_51a.c
index ea26f2f..82d7727 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_52a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_52a.c
index 559a1dd..0532769 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_53a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_53a.c
index feb38a3..309d6c6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_54a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_54a.c
index cb2f60b..9a93e44 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_61b.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_61b.c
index dcbde37..9125052 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE190_Integer_Overflow__short_rand_add_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE190_Integer_Overflow__short_rand_add_61b_goodG2BSource(short data)
 short CWE190_Integer_Overflow__short_rand_add_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_62b.cpp
index 8e0e88e..ca1a754 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__short_rand_add_62
 void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(short &data)
 void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_63a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_63a.c
index 69d751b..852c898 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_64a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_64a.c
index c6c7cc8..a7ebc05 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_add_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_65a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_65a.c
index bfb575a..f762c83 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_add_65_bad()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_add_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_add_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_66a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_66a.c
index 308cec3..a5f52eb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_add_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_add_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_add_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_67a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_67a.c
index 597abd5..6ebcca3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_add_67_bad()
     CWE190_Integer_Overflow__short_rand_add_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_add_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_add_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_add_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_68a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_68a.c
index 12fb259..6d5dbab 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_add_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_68_badData = data;
     CWE190_Integer_Overflow__short_rand_add_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_68_goodB2GData = data;
     CWE190_Integer_Overflow__short_rand_add_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_72a.cpp
index 5ac888a..a850355 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_73a.cpp
index 2de0cd6..f3afe19 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_74a.cpp
index 891d252..78ef1fb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_81a.cpp
index 93736e7..ae5a061 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_add_81_base& baseObject = CWE190_Integer_Overflow__short_rand_add_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_add_81_base& baseObject = CWE190_Integer_Overflow__short_rand_add_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_82a.cpp
index ff51a82..0df0307 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_add_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_add_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_add_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_bad.cpp
index e27df1b..112a2d6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_add_83_bad::CWE190_Integer_Overflow__short_r
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_add_83_bad::~CWE190_Integer_Overflow__short_rand_add_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_goodB2G.cpp
index c04df9e..e3a74e9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_add_83_goodB2G::CWE190_Integer_Overflow__sho
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_add_83_goodB2G::~CWE190_Integer_Overflow__short_rand_add_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_bad.cpp
index 169c1e7..8dd4ec3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_add_84_bad::CWE190_Integer_Overflow__short_r
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_add_84_bad::~CWE190_Integer_Overflow__short_rand_add_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_goodB2G.cpp
index 9da3e0f..5f7796a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_add_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_add_84_goodB2G::CWE190_Integer_Overflow__sho
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_add_84_goodB2G::~CWE190_Integer_Overflow__short_rand_add_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_01.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_01.c
index e2e8b79..27e1e2e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     if(data > 0) /* ensure we won't have an underflow */
     {
         /* POTENTIAL FLAW: if (data*2) > SHRT_MAX, this will overflow */
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     if(data > 0) /* ensure we won't have an underflow */
     {
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_02.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_02.c
index 176b581..86c11a5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_03.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_03.c
index 957a08e..f2da6c2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_04.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_04.c
index 98c1901..dd04bc2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_05.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_05.c
index 97ad502..0d62860 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_06.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_06.c
index 6569216..5019b86 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_07.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_07.c
index 19f431b..8e24124 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_08.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_08.c
index 50422dc..fc7fbc5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -97,7 +97,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_09.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_09.c
index b8d2d2d..a017903 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_10.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_10.c
index f029459..85b13b5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_11.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_11.c
index cd86561..dc40b1c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_12.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_12.c
index 68f0c33..1c76490 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -74,12 +74,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_13.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_13.c
index fc94717..02d19fd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_14.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_14.c
index 86b78f8..65a80f3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_15.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_15.c
index 7406a28..831037c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -104,7 +104,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_16.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_16.c
index 79d7aec..5a7fa4e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_17.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_17.c
index 3498288..5459e2d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_18.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_18.c
index 7f43e3c..84180d7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     if(data > 0) /* ensure we won't have an underflow */
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     if(data > 0) /* ensure we won't have an underflow */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_21.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_21.c
index ede39a2..78f18c1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -116,7 +116,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_22a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_22a.c
index c99c2aa..1779a12 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__short_rand_multiply_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__short_rand_multiply_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__short_rand_multiply_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_31.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_31.c
index 85186c1..09c6edd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_32.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_32.c
index 71d3c98..a215f67 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_33.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_33.cpp
index 9ca88a7..56ac956 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_33.cpp
@@ -28,7 +28,7 @@ void bad()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         if(data > 0) /* ensure we won't have an underflow */
@@ -70,7 +70,7 @@ static void goodB2G()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         if(data > 0) /* ensure we won't have an underflow */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_34.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_34.c
index 286c2a3..b1a838a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_34_bad()
     CWE190_Integer_Overflow__short_rand_multiply_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_multiply_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_41.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_41.c
index 51cbb61..5634579 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -85,7 +85,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_42.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_42.c
index 07f8cd5..6486046 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_43.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_43.cpp
index 223915c..e96b1a8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_43.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__short_rand_multiply_43
 static void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_44.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_44.c
index 9e463fd..4080eff 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -90,7 +90,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_45.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_45.c
index f626720..e9b1afd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_45_badData = data;
     badSink();
 }
@@ -94,7 +94,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_51a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_51a.c
index f97a6a8..3057c2e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_52a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_52a.c
index 7798a3f..4e6e900 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_53a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_53a.c
index 2c207c2..0032156 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_54a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_54a.c
index e993bd7..11f5153 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_61b.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_61b.c
index 2699d66..9110729 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE190_Integer_Overflow__short_rand_multiply_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE190_Integer_Overflow__short_rand_multiply_61b_goodG2BSource(short data)
 short CWE190_Integer_Overflow__short_rand_multiply_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_62b.cpp
index c37d552..983fa62 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__short_rand_multiply_62
 void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(short &data)
 void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_63a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_63a.c
index 1a40695..4df77f3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_64a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_64a.c
index 302d205..57b817d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_65a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_65a.c
index ce9b674..653033e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_65_bad()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_multiply_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_multiply_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_66a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_66a.c
index 0ed828f..537125a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_multiply_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_multiply_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_67a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_67a.c
index 74ee91c..4c3c054 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_67_bad()
     CWE190_Integer_Overflow__short_rand_multiply_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_multiply_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_multiply_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_multiply_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_68a.c b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_68a.c
index 502794d..cb8b575 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_multiply_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_68_badData = data;
     CWE190_Integer_Overflow__short_rand_multiply_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_68_goodB2GData = data;
     CWE190_Integer_Overflow__short_rand_multiply_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_72a.cpp
index 5fce374..8f91003 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_73a.cpp
index 6a35a7d..d6709f3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_74a.cpp
index f3f08f3..44ac43c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_81a.cpp
index aef5c7e..4f8e880 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_multiply_81_base& baseObject = CWE190_Integer_Overflow__short_rand_multiply_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_multiply_81_base& baseObject = CWE190_Integer_Overflow__short_rand_multiply_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_82a.cpp
index 6af9866..65a65ef 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_multiply_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_multiply_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_multiply_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_bad.cpp
index f1b3756..c0d0b80 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_multiply_83_bad::CWE190_Integer_Overflow__sh
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_multiply_83_bad::~CWE190_Integer_Overflow__short_rand_multiply_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G.cpp
index 2b6ecfd..4996349 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G::CWE190_Integer_Overflow
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G::~CWE190_Integer_Overflow__short_rand_multiply_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_bad.cpp
index 47077b8..f7ccb20 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_bad.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_multiply_84_bad::CWE190_Integer_Overflow__sh
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_multiply_84_bad::~CWE190_Integer_Overflow__short_rand_multiply_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G.cpp
index 1521b8f..49c1fd4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G::CWE190_Integer_Overflow
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G::~CWE190_Integer_Overflow__short_rand_multiply_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_01.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_01.c
index c7cac29..438ee69 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_01.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_square_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: if (data*data) > SHRT_MAX, this will overflow */
         short result = data * data;
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data <= LONG_MAX && labs(data) <= (long)sqrt((double)SHRT_MAX))
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_02.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_02.c
index 0b9ad37..3306676 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_02.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_03.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_03.c
index f01d611..ad52726 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_03.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_04.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_04.c
index c6e8984..d7e5cc8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_04.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__short_rand_square_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -58,7 +58,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_05.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_05.c
index 0da5102..4bc1c9b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_05.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__short_rand_square_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -58,7 +58,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_06.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_06.c
index 85a93b2..7b6c32b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_06.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_square_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_07.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_07.c
index 1b8d42e..5c73ddf 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_07.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_square_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_08.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_08.c
index 8f15fc4..2015f22 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_08.c
@@ -41,7 +41,7 @@ void CWE190_Integer_Overflow__short_rand_square_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -65,7 +65,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_09.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_09.c
index 01b123f..f0fe432 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_09.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_10.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_10.c
index efbe13b..5ddcc48 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_10.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_11.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_11.c
index 79b0caa..fb7c6b9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_11.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_12.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_12.c
index 08de56d..a3c31e8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_12.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_13.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_13.c
index 225a806..d4479d3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_13.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_14.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_14.c
index e6e150e..fb8c86f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_14.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -52,7 +52,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_15.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_15.c
index 80363b3..8f0a927 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_15.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -65,7 +65,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_16.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_16.c
index ac95389..fcb4731 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_16.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -54,7 +54,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_17.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_17.c
index 8a91bd4..88a66c7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_17.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -54,7 +54,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_18.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_18.c
index 1320e8b..59f9490 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_18.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_square_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -50,7 +50,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_21.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_21.c
index 8460742..23359c8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_21.c
@@ -41,7 +41,7 @@ void CWE190_Integer_Overflow__short_rand_square_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -111,7 +111,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_22a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_22a.c
index c29e09e..9903a89 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__short_rand_square_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__short_rand_square_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__short_rand_square_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_31.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_31.c
index 19350a4..fcdcdaa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_31.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_square_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_32.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_32.c
index 824faf9..a046116 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_32.c
@@ -30,7 +30,7 @@ void CWE190_Integer_Overflow__short_rand_square_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_33.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_33.cpp
index c9535e1..bc79048 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_33.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_33.cpp
@@ -30,7 +30,7 @@ void bad()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
@@ -70,7 +70,7 @@ static void goodB2G()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_34.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_34.c
index 9810fce..2eb0ba9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_34.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_square_34_bad()
     CWE190_Integer_Overflow__short_rand_square_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_square_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_41.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_41.c
index d5081be..83607ce 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_41.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__short_rand_square_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -82,7 +82,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_42.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_42.c
index 8bcd1b2..ba0e20c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_42.c
@@ -24,7 +24,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_43.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_43.cpp
index fc51917..6ccf12e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_43.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_43.cpp
@@ -27,7 +27,7 @@ namespace CWE190_Integer_Overflow__short_rand_square_43
 static void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_44.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_44.c
index 6a0aeb9..e5da525 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_44.c
@@ -37,7 +37,7 @@ void CWE190_Integer_Overflow__short_rand_square_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -87,7 +87,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_45.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_45.c
index 03b923a..626917d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_45.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__short_rand_square_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_45_badData = data;
     badSink();
 }
@@ -91,7 +91,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_51a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_51a.c
index f704fe0..939e47c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_51a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_51b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_52a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_52a.c
index 3d9ec3b..6424917 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_52a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_52b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_53a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_53a.c
index bf60d80..419f5f5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_53a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_53b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_54a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_54a.c
index d1da215..4c1190a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_54a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_54b_badSink(data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_61b.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_61b.c
index de4744a..2fce88d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_61b.c
@@ -24,7 +24,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE190_Integer_Overflow__short_rand_square_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -44,7 +44,7 @@ short CWE190_Integer_Overflow__short_rand_square_61b_goodG2BSource(short data)
 short CWE190_Integer_Overflow__short_rand_square_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_62b.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_62b.cpp
index 027bc9a..da44d92 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_62b.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE190_Integer_Overflow__short_rand_square_62
 void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(short &data)
 void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_63a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_63a.c
index 4a4b45b..c8ca215 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_63a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_63b_badSink(&data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_64a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_64a.c
index c21cd20..ebceefd 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_64a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_square_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_64b_badSink(&data);
 }
 
@@ -57,7 +57,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_65a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_65a.c
index 18c5710..ef12ed1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_65a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_square_65_bad()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_square_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -62,7 +62,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_square_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_66a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_66a.c
index 2a2c2c8..2846e97 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_66a.c
@@ -30,7 +30,7 @@ void CWE190_Integer_Overflow__short_rand_square_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_square_66b_badSink(dataArray);
@@ -63,7 +63,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_square_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_67a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_67a.c
index c472cce..f1e0c86 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_67a.c
@@ -35,7 +35,7 @@ void CWE190_Integer_Overflow__short_rand_square_67_bad()
     CWE190_Integer_Overflow__short_rand_square_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_square_67b_badSink(myStruct);
 }
@@ -67,7 +67,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_square_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_square_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_68a.c b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_68a.c
index afb6b2f..c4eb0d1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_68a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_square_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_68_badData = data;
     CWE190_Integer_Overflow__short_rand_square_68b_badSink();
 }
@@ -63,7 +63,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_68_goodB2GData = data;
     CWE190_Integer_Overflow__short_rand_square_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_72a.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_72a.cpp
index 841e89b..7ea6467 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_72a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_73a.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_73a.cpp
index abdb63e..6130ef1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_73a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_74a.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_74a.cpp
index 2064aa6..309548e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_74a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_81a.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_81a.cpp
index 3fb44fd..82dcc7e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_81a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_square_81_base& baseObject = CWE190_Integer_Overflow__short_rand_square_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE190_Integer_Overflow__short_rand_square_81_base& baseObject = CWE190_Integer_Overflow__short_rand_square_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp
index c9d54e3..b9dc8e0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_square_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_square_82_base* baseObject = new CWE190_Integer_Overflow__short_rand_square_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_bad.cpp
index c0a015d..11cb572 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_bad.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__short_rand_square_83_bad::CWE190_Integer_Overflow__shor
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_square_83_bad::~CWE190_Integer_Overflow__short_rand_square_83_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_goodB2G.cpp
index a3d79b2..14e2ba0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_83_goodB2G.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__short_rand_square_83_goodB2G::CWE190_Integer_Overflow__
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_square_83_goodB2G::~CWE190_Integer_Overflow__short_rand_square_83_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_bad.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_bad.cpp
index c261b07..3987713 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_bad.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_bad.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__short_rand_square_84_bad::CWE190_Integer_Overflow__shor
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_square_84_bad::~CWE190_Integer_Overflow__short_rand_square_84_bad()
diff --git a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_goodB2G.cpp b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_goodB2G.cpp
index a2eb7b7..74c2a2a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_goodB2G.cpp
+++ b/C/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_84_goodB2G.cpp
@@ -27,7 +27,7 @@ CWE190_Integer_Overflow__short_rand_square_84_goodB2G::CWE190_Integer_Overflow__
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE190_Integer_Overflow__short_rand_square_84_goodB2G::~CWE190_Integer_Overflow__short_rand_square_84_goodB2G()
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_01.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_01.c
index 5b84a14..95259f4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Incrementing data could cause an overflow */
         data++;
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < CHAR_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_02.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_02.c
index a60c5d0..c0cf2c5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_03.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_03.c
index 3312aa5..5f6942a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_04.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_04.c
index 6bb42ad..5db06ca 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_05.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_05.c
index 513b756..300492f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_06.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_06.c
index 54a5862..dda1bad 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_07.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_07.c
index 00798ae..128a1bf 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_08.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_08.c
index dab66f6..98a5f10 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_09.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_09.c
index 4918ca7..5109c4f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_10.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_10.c
index 23b153c..4fa710f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_11.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_11.c
index b1eb3e7..fd45633 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_12.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_12.c
index 77451ee..cb8ddb7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_13.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_13.c
index 3b572f7..7cfa865 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_14.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_14.c
index c9d31a5..97b3d65 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_15.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_15.c
index 31ff1ce..5236bf0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_16.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_16.c
index 7cf2ead..8974ece 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_17.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_17.c
index 1d7f18b..f4f4a7c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_18.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_18.c
index f5bc919..3f30b5d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_21.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_21.c
index b12e7a2..ee6abab 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_22a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_22a.c
index f664c37..454f1f0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__char_rand_postinc_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__char_rand_postinc_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_31.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_31.c
index ee36db6..66480e6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_32.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_32.c
index eb29454..dbc7bf9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_34.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_34.c
index 1b4d16a..fbf707d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_34_bad()
     CWE190_Integer_Overflow__char_rand_postinc_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_postinc_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_41.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_41.c
index d643523..4217d89 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_42.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_42.c
index b57b628..e151bec 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_44.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_44.c
index 218dfed..f5abca4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_45.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_45.c
index e310813..c522578 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_51a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_51a.c
index ea9571a..02823e1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_52a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_52a.c
index c9d44d9..330c4d3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_53a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_53a.c
index f401a97..306c96a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_54a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_54a.c
index 519310d..6d5adeb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_61b.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_61b.c
index 40a1119..7f44d00 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE190_Integer_Overflow__char_rand_postinc_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE190_Integer_Overflow__char_rand_postinc_61b_goodG2BSource(char data)
 char CWE190_Integer_Overflow__char_rand_postinc_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_63a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_63a.c
index ce6bb2e..1278c10 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_64a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_64a.c
index b361046..d5086eb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_65a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_65a.c
index e8bf41b..a166fcb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_65_bad()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_postinc_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_postinc_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_66a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_66a.c
index 1363fa9..8849f21 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_postinc_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_postinc_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_67a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_67a.c
index 428d007..5b43d67 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_67_bad()
     CWE190_Integer_Overflow__char_rand_postinc_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_postinc_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_postinc_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_postinc_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_68a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_68a.c
index 7ce7dea..f1d022b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_rand_postinc_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_postinc_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_68_badData = data;
     CWE190_Integer_Overflow__char_rand_postinc_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_postinc_68_goodB2GData = data;
     CWE190_Integer_Overflow__char_rand_postinc_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_01.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_01.c
index 4aeff6f..9c45304 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Incrementing data could cause an overflow */
         data++;
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < SHRT_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_02.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_02.c
index 6b31cb4..a81d8e6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_03.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_03.c
index 86a22a3..3a36d47 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_04.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_04.c
index 732ecd1..bce3391 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_05.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_05.c
index ce5a011..0deb3f8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_06.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_06.c
index 3b5af14..b780ed1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_07.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_07.c
index 487332e..533fd9c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_08.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_08.c
index 4ecf659..ce152a1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_09.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_09.c
index 9861e57..e7a09a2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_10.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_10.c
index ad5da3a..eaf7ae4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_11.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_11.c
index cdd8bd8..9d2fe23 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_12.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_12.c
index baf7b90..3ed7847 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_13.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_13.c
index 7731425..e65313b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_14.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_14.c
index 0d4a9d6..6e3baf1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_15.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_15.c
index b80c5ca..21d14f9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_16.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_16.c
index 6e4d6eb..261152a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_17.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_17.c
index c6fb0ad..24a4f1c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_18.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_18.c
index 05f595e..c24d954 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_21.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_21.c
index ac0a992..7b60483 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_22a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_22a.c
index d0ebcd4..af7a8b6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__short_rand_postinc_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__short_rand_postinc_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_31.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_31.c
index 8c55e2b..eabb460 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_32.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_32.c
index 64324e2..30bb74b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_34.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_34.c
index 7cd357b..187fd8b 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_34_bad()
     CWE190_Integer_Overflow__short_rand_postinc_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_postinc_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_41.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_41.c
index 7df2f6a..586ec2e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_42.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_42.c
index fcef263..e704413 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_44.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_44.c
index 0e1b3cb..9b0347f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_45.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_45.c
index d867bf1..31b6d0f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_51a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_51a.c
index 81a33a8..e364f96 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_52a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_52a.c
index 029863e..8d7a6a7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_53a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_53a.c
index 5ce2785..914dfce 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_54a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_54a.c
index 8ab4194..9896136 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_61b.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_61b.c
index b0b0367..db5cce1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE190_Integer_Overflow__short_rand_postinc_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE190_Integer_Overflow__short_rand_postinc_61b_goodG2BSource(short data)
 short CWE190_Integer_Overflow__short_rand_postinc_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_63a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_63a.c
index 53f53b7..e23e6f0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_64a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_64a.c
index 9a09c37..13e1f6d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_65a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_65a.c
index 30064b1..def3fab 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_65_bad()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_postinc_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_postinc_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_66a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_66a.c
index f298ed2..bf0ff94 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_postinc_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_postinc_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_67a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_67a.c
index d06e909..df08a66 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_67_bad()
     CWE190_Integer_Overflow__short_rand_postinc_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_postinc_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_postinc_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_postinc_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_68a.c b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_68a.c
index 9e01c0c..429ea8c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_rand_postinc_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_postinc_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_68_badData = data;
     CWE190_Integer_Overflow__short_rand_postinc_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_postinc_68_goodB2GData = data;
     CWE190_Integer_Overflow__short_rand_postinc_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_01.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_01.c
index 48c356c..381bb9c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Incrementing data could cause an overflow */
         ++data;
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < CHAR_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_02.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_02.c
index 9263c00..58320f9 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_03.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_03.c
index 9b1f066..f46ffd4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_04.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_04.c
index 0747ef2..30c46e6 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_05.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_05.c
index a95648f..8f90eb5 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_06.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_06.c
index 5e2cb77..082b5d8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_07.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_07.c
index 684709e..02d3750 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_08.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_08.c
index deaf314..5796e31 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_09.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_09.c
index 4572c05..854c7ce 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_10.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_10.c
index df7adfa..68cdccb 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_11.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_11.c
index 2d79362..9b320b1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_12.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_12.c
index 57fe7ba..6c3f150 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_13.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_13.c
index fca0537..26959bc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_14.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_14.c
index 8a1048b..d4e6823 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_15.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_15.c
index 6e38541..a89aad3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_16.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_16.c
index fc2de3c..299719c 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_17.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_17.c
index c4f6202..dbc318a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_18.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_18.c
index 66d0d37..3aef343 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_21.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_21.c
index 3b8444e..467a387 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_22a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_22a.c
index 09a40b7..3fcbac7 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__char_rand_preinc_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__char_rand_preinc_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_31.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_31.c
index e299f2a..cc234ae 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_32.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_32.c
index fd93143..1340069 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_34.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_34.c
index a2e6797..21f8492 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_34_bad()
     CWE190_Integer_Overflow__char_rand_preinc_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_preinc_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_41.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_41.c
index 521dac6..12ff339 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_42.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_42.c
index 823d9e5..a79242f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_44.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_44.c
index f4edabd..4dcbf01 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_45.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_45.c
index 3a1f9cd..af2c455 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_51a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_51a.c
index 1cbe910..96aa14a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_52a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_52a.c
index 4fc4e05..6a757a4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_53a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_53a.c
index 196cbef..9cfe599 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_54a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_54a.c
index 9959183..a5dab87 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_61b.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_61b.c
index e88d899..993a550 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE190_Integer_Overflow__char_rand_preinc_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE190_Integer_Overflow__char_rand_preinc_61b_goodG2BSource(char data)
 char CWE190_Integer_Overflow__char_rand_preinc_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_63a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_63a.c
index 11b311b..f6cbcf3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_64a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_64a.c
index 781e097..31a6f7d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_65a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_65a.c
index 5a267ae..2412eed 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_65_bad()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_preinc_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE190_Integer_Overflow__char_rand_preinc_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_66a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_66a.c
index 2e44461..84437de 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_preinc_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE190_Integer_Overflow__char_rand_preinc_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_67a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_67a.c
index 70b578e..86e8332 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_67_bad()
     CWE190_Integer_Overflow__char_rand_preinc_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_preinc_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__char_rand_preinc_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__char_rand_preinc_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_68a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_68a.c
index c775f90..d8df0fa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_rand_preinc_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__char_rand_preinc_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_68_badData = data;
     CWE190_Integer_Overflow__char_rand_preinc_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE190_Integer_Overflow__char_rand_preinc_68_goodB2GData = data;
     CWE190_Integer_Overflow__char_rand_preinc_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_01.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_01.c
index 9e2a7f2..dad0f6f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_01.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_01.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Incrementing data could cause an overflow */
         ++data;
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an overflow from occurring */
     if (data < SHRT_MAX)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_02.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_02.c
index d5eb050..b2f97d2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_02.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_02.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_03.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_03.c
index 513d20f..6f69f11 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_03.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_03.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_04.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_04.c
index 2088118..76f7629 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_04.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_04.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_05.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_05.c
index cc7d420..663ca58 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_05.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_05.c
@@ -32,7 +32,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_06.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_06.c
index 22e2d7e..b59e9da 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_06.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_06.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_07.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_07.c
index b018440..ae90d01 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_07.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_07.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_08.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_08.c
index b71cd4d..437e9aa 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_08.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_08.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_09.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_09.c
index 7bbc592..89c5484 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_09.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_09.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_10.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_10.c
index 87479cf..849be68 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_10.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_10.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_11.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_11.c
index 49b5a5b..6f49c5e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_11.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_11.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_12.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_12.c
index d8903ed..26b4fc3 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_12.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_12.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_13.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_13.c
index 16b931b..bf2ef2f 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_13.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_13.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_14.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_14.c
index 3a6a191..389bbc0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_14.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_14.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_15.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_15.c
index f9e21ce..220bdc1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_15.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_15.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_16.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_16.c
index 820d83e..9da1aa8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_16.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_16.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_17.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_17.c
index 4416aaa..9e9650d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_17.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_17.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_18.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_18.c
index c6feb9d..afb4305 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_18.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_18.c
@@ -26,7 +26,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an overflow from occurring */
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_21.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_21.c
index 3a10e75..68531dc 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_21.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_21.c
@@ -40,7 +40,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_22a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_22a.c
index 6014ee1..80db3c8 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_22a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_22a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_22_badGlobal = 1; /* true */
     CWE190_Integer_Overflow__short_rand_preinc_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Global = 0; /* false */
     CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Global = 1; /* true */
     CWE190_Integer_Overflow__short_rand_preinc_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_31.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_31.c
index ea5ec15..c67096d 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_31.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_31.c
@@ -24,7 +24,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_32.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_32.c
index e463cb6..6ae268a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_32.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_32.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_34.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_34.c
index 556c114..b49f2b4 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_34.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_34.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_34_bad()
     CWE190_Integer_Overflow__short_rand_preinc_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_preinc_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_41.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_41.c
index 6c7c2c7..d9dbba0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_41.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_41.c
@@ -34,7 +34,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_42.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_42.c
index 88b8ca1..29a7fd0 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_42.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_44.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_44.c
index 6a5e711..af82213 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_44.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_44.c
@@ -36,7 +36,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_45.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_45.c
index b82fa6f..2fb8738 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_45.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_45.c
@@ -39,7 +39,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_51a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_51a.c
index d3dbefd..c9ae965 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_51a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_51a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_52a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_52a.c
index 9ca006c..66cfd2a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_52a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_52a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_53a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_53a.c
index 70777e1..ba4265e 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_53a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_53a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_54a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_54a.c
index e9d1b08..9bc0f6a 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_54a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_54a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_61b.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_61b.c
index 2738fca..9ecb0d1 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_61b.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE190_Integer_Overflow__short_rand_preinc_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE190_Integer_Overflow__short_rand_preinc_61b_goodG2BSource(short data)
 short CWE190_Integer_Overflow__short_rand_preinc_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_63a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_63a.c
index 954338d..1fa13ca 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_63a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_63a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_64a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_64a.c
index 1825d65..c3a69da 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_64a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_64a.c
@@ -27,7 +27,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_65a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_65a.c
index 0a8c7ce..980c845 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_65a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_65a.c
@@ -29,7 +29,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_65_bad()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_preinc_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE190_Integer_Overflow__short_rand_preinc_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_66a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_66a.c
index 6f5c3aa..a32cea2 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_66a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_66a.c
@@ -28,7 +28,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_preinc_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE190_Integer_Overflow__short_rand_preinc_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_67a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_67a.c
index 3ee63fd..41b2c15 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_67a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_67a.c
@@ -33,7 +33,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_67_bad()
     CWE190_Integer_Overflow__short_rand_preinc_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_preinc_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE190_Integer_Overflow__short_rand_preinc_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE190_Integer_Overflow__short_rand_preinc_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_68a.c b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_68a.c
index 7b42f0a..87b1d28 100644
--- a/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_68a.c
+++ b/C/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__short_rand_preinc_68a.c
@@ -31,7 +31,7 @@ void CWE190_Integer_Overflow__short_rand_preinc_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_68_badData = data;
     CWE190_Integer_Overflow__short_rand_preinc_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE190_Integer_Overflow__short_rand_preinc_68_goodB2GData = data;
     CWE190_Integer_Overflow__short_rand_preinc_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_01.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_01.c
index b2f4229..94d0850 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     if(data < 0) /* ensure we won't have an overflow */
     {
         /* POTENTIAL FLAW: if (data * 2) < CHAR_MIN, this will underflow */
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     if(data < 0) /* ensure we won't have an overflow */
     {
         /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_02.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_02.c
index 3ade751..451af3e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_03.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_03.c
index 5aedbd9..2196d57 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_04.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_04.c
index f8bf5b2..d7e09cc 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_05.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_05.c
index 14c255f..f6333cd 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_06.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_06.c
index d5fef41..2974bcc 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_07.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_07.c
index 174c1b1..0a40a3c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_08.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_08.c
index 284b641..4229273 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -97,7 +97,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_09.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_09.c
index 3544463..6f0000f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_10.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_10.c
index 621d82e..55ac203 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_11.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_11.c
index 22b8c6a..85bec96 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_12.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_12.c
index b4f281d..d78caaf 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -74,12 +74,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_13.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_13.c
index af94f92..be39d20 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_14.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_14.c
index 096745f..8f98c2b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_15.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_15.c
index 4af04ff..8359ab7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -104,7 +104,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_16.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_16.c
index 22f75da..ad5e5f8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_17.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_17.c
index f1b29a6..4a3a5a1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_18.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_18.c
index 7d83c7f..1e19f60 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     if(data < 0) /* ensure we won't have an overflow */
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     if(data < 0) /* ensure we won't have an overflow */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_21.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_21.c
index 5e475ee..ad5d710 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -116,7 +116,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_22a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_22a.c
index 10aad45..2e9687f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__char_rand_multiply_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__char_rand_multiply_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__char_rand_multiply_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_31.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_31.c
index bbd9fc3..2e32db2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_32.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_32.c
index 243e265..a242f02 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_33.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_33.cpp
index 9647231..d3ef95c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_33.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_33.cpp
@@ -28,7 +28,7 @@ void bad()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         if(data < 0) /* ensure we won't have an overflow */
@@ -70,7 +70,7 @@ static void goodB2G()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         if(data < 0) /* ensure we won't have an overflow */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c
index 42a70c3..44bd417 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_34_bad()
     CWE191_Integer_Underflow__char_rand_multiply_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_multiply_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_41.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_41.c
index f562442..9f771d8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -85,7 +85,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_42.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_42.c
index 529910c..1fcc082 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_43.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_43.cpp
index 752c627..edf422f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_43.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_43.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__char_rand_multiply_43
 static void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_44.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_44.c
index 940777b..2149132 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -90,7 +90,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c
index d742574..2b5afe9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_45_badData = data;
     badSink();
 }
@@ -94,7 +94,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_51a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_51a.c
index 3ab9f58..0bde228 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_52a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_52a.c
index add6aa3..6985302 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_53a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_53a.c
index dc104f4..2397758 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_54a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_54a.c
index bb6e77e..4a35a5d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_61b.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_61b.c
index cfd782d..56bfbf3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE191_Integer_Underflow__char_rand_multiply_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE191_Integer_Underflow__char_rand_multiply_61b_goodG2BSource(char data)
 char CWE191_Integer_Underflow__char_rand_multiply_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_62b.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_62b.cpp
index 5f083b5..a794a05 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_62b.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__char_rand_multiply_62
 void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(char &data)
 void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_63a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_63a.c
index 030ec83..0316ce3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_64a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_64a.c
index 18161e0..db15115 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_65a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_65a.c
index b2a29ed..f619d32 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_65_bad()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_multiply_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_multiply_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_66a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_66a.c
index cc403f1..8c4cbf4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_multiply_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_multiply_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_67a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_67a.c
index 2ef485e..d373662 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_67_bad()
     CWE191_Integer_Underflow__char_rand_multiply_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_multiply_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_multiply_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_multiply_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_68a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_68a.c
index 42c8fa8..888de17 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_multiply_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_68_badData = data;
     CWE191_Integer_Underflow__char_rand_multiply_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_68_goodB2GData = data;
     CWE191_Integer_Underflow__char_rand_multiply_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_72a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_72a.cpp
index b509048..c67a862 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_72a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_73a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_73a.cpp
index c1fc6ee..3196c97 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_73a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_74a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_74a.cpp
index a87db3f..2a0e5c1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_74a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_81a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_81a.cpp
index 6d9aa23..e775cba 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_81a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE191_Integer_Underflow__char_rand_multiply_81_base& baseObject = CWE191_Integer_Underflow__char_rand_multiply_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE191_Integer_Underflow__char_rand_multiply_81_base& baseObject = CWE191_Integer_Underflow__char_rand_multiply_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_82a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_82a.cpp
index 6ad8bbb..da11754 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_82a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_82_base* baseObject = new CWE191_Integer_Underflow__char_rand_multiply_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_multiply_82_base* baseObject = new CWE191_Integer_Underflow__char_rand_multiply_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_bad.cpp
index d3fac1a..92d55d0 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_multiply_83_bad::CWE191_Integer_Underflow__c
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_multiply_83_bad::~CWE191_Integer_Underflow__char_rand_multiply_83_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G.cpp
index 318d60b..e394c7d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G::CWE191_Integer_Underflo
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G::~CWE191_Integer_Underflow__char_rand_multiply_83_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_bad.cpp
index 8b4574c..82dd3c7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_multiply_84_bad::CWE191_Integer_Underflow__c
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_multiply_84_bad::~CWE191_Integer_Underflow__char_rand_multiply_84_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G.cpp
index 5034915..4ce39c6 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G::CWE191_Integer_Underflo
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G::~CWE191_Integer_Underflow__char_rand_multiply_84_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_01.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_01.c
index 9313b36..fa5d3ba 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_sub_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Subtracting 1 from data could cause an underflow */
         char result = data - 1;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > CHAR_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_02.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_02.c
index ec7584e..405ac7b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_03.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_03.c
index 620e914..958d1ad 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_04.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_04.c
index f62cb01..2155ad8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_sub_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_05.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_05.c
index 62da003..fceaced 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_sub_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_06.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_06.c
index 8b73a1b..03b72e1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_sub_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_07.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_07.c
index ba0ac54..ccf2407 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_sub_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_08.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_08.c
index 2eb5107..7fa4a3a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_sub_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -63,7 +63,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -93,7 +93,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_09.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_09.c
index 1850c8e..fbf3ae3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_10.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_10.c
index 09c0d4d..de2ccac 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_11.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_11.c
index dc77b2b..e29b229 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_12.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_12.c
index 86262826..7bf6bcb 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -70,12 +70,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_13.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_13.c
index bc45953..aaa933c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_14.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_14.c
index 89e10a4..468a6e9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_15.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_15.c
index ea9e8e8..e6d1f5d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -63,7 +63,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -100,7 +100,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_16.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_16.c
index 989d3f0..59c2892 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -52,7 +52,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_17.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_17.c
index 991550d..ea2a742 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -52,7 +52,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_18.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_18.c
index 64ff908..991b39e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_sub_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -48,7 +48,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c
index a384c5f..a4f16ec 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_sub_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -81,7 +81,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -109,7 +109,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_22a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_22a.c
index 9f96e60..8c17749 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_sub_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__char_rand_sub_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__char_rand_sub_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__char_rand_sub_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_31.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_31.c
index aec6990..0a25f72 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_sub_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -64,7 +64,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_32.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_32.c
index 8374d6f..a767d5e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_sub_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -78,7 +78,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_33.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_33.cpp
index 99bc8d4..f756aa5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_33.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_33.cpp
@@ -28,7 +28,7 @@ void bad()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         {
@@ -68,7 +68,7 @@ static void goodB2G()
     char &dataRef = data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char data = dataRef;
         /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_34.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_34.c
index 4aade61..4619a29 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_sub_34_bad()
     CWE191_Integer_Underflow__char_rand_sub_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -73,7 +73,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_sub_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_41.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_41.c
index 21f7cd5..45b06ba 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_41.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__char_rand_sub_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -80,7 +80,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_42.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_42.c
index 13234e3..03715c2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -66,7 +66,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_43.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_43.cpp
index abc4c11..32a552e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_43.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_43.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__char_rand_sub_43
 static void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 void bad()
@@ -67,7 +67,7 @@ static void goodG2B()
 static void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_44.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_44.c
index 82a31e8..252b718 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_44.c
@@ -35,7 +35,7 @@ void CWE191_Integer_Underflow__char_rand_sub_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_45.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_45.c
index fb2f024..fe8aecf 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_45.c
@@ -38,7 +38,7 @@ void CWE191_Integer_Underflow__char_rand_sub_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_45_badData = data;
     badSink();
 }
@@ -89,7 +89,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_51a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_51a.c
index f21ae39..ed0e44b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_52a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_52a.c
index e4a4b2a..06a8f0a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_53a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_53a.c
index 7d383be..c3c09f1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_54a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_54a.c
index 9b7a7ed..ffc904e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_61b.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_61b.c
index 333cfa5..1aacbf7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE191_Integer_Underflow__char_rand_sub_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE191_Integer_Underflow__char_rand_sub_61b_goodG2BSource(char data)
 char CWE191_Integer_Underflow__char_rand_sub_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_62b.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_62b.cpp
index a17b3dc..3962575 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_62b.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__char_rand_sub_62
 void badSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(char &data)
 void goodB2GSource(char &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_63a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_63a.c
index ec73f54..be6e376 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_64a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_64a.c
index cca5936..c891855 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_sub_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_65a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_65a.c
index e975a58..f1fca83 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_sub_65_bad()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_sub_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_sub_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_66a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_66a.c
index 472f313..1e7e957 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_sub_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_sub_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_sub_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_67a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_67a.c
index 31f2606..b5631a7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__char_rand_sub_67_bad()
     CWE191_Integer_Underflow__char_rand_sub_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_sub_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_sub_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_sub_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_68a.c b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_68a.c
index c3076ef..4d311bd 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_sub_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_68_badData = data;
     CWE191_Integer_Underflow__char_rand_sub_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_68_goodB2GData = data;
     CWE191_Integer_Underflow__char_rand_sub_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_72a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_72a.cpp
index 7f1baf5..eee80d3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_72a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<char> dataVector;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_73a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_73a.cpp
index e424cd9..09918b8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_73a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<char> dataList;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_74a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_74a.cpp
index a0bbb31..08f0b07 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_74a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, char> dataMap;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_81a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_81a.cpp
index 8af9f0a..0ec0a8c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_81a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE191_Integer_Underflow__char_rand_sub_81_base& baseObject = CWE191_Integer_Underflow__char_rand_sub_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     const CWE191_Integer_Underflow__char_rand_sub_81_base& baseObject = CWE191_Integer_Underflow__char_rand_sub_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82a.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82a.cpp
index a79e93b..19e4a6b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_82_base* baseObject = new CWE191_Integer_Underflow__char_rand_sub_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_sub_82_base* baseObject = new CWE191_Integer_Underflow__char_rand_sub_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_bad.cpp
index 8da9701..b453b51 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_sub_83_bad::CWE191_Integer_Underflow__char_r
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_sub_83_bad::~CWE191_Integer_Underflow__char_rand_sub_83_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_goodB2G.cpp
index 2ffc64a..feb8f1a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_sub_83_goodB2G::CWE191_Integer_Underflow__ch
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_sub_83_goodB2G::~CWE191_Integer_Underflow__char_rand_sub_83_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_bad.cpp
index ae5273c..dd84425 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_sub_84_bad::CWE191_Integer_Underflow__char_r
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_sub_84_bad::~CWE191_Integer_Underflow__char_rand_sub_84_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_goodB2G.cpp
index 8afc7f1..113337b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__char_rand_sub_84_goodB2G::CWE191_Integer_Underflow__ch
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
 }
 
 CWE191_Integer_Underflow__char_rand_sub_84_goodB2G::~CWE191_Integer_Underflow__char_rand_sub_84_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_01.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_01.c
index 81505eb..b6b0724 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     if(data < 0) /* ensure we won't have an overflow */
     {
         /* POTENTIAL FLAW: if (data * 2) < SHRT_MIN, this will underflow */
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     if(data < 0) /* ensure we won't have an overflow */
     {
         /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_02.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_02.c
index c59cbe3..53f0b59 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_03.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_03.c
index 4dd5eef..97fe042 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_04.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_04.c
index f76d5f4..faf935b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_05.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_05.c
index 23ae9ad..6e1a0c8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -90,7 +90,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_06.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_06.c
index f5da190..3affba8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_07.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_07.c
index 3fcd743..899e313 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -89,7 +89,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_08.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_08.c
index ad37da1..1c210ac 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -97,7 +97,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_09.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_09.c
index fa04c64..1531d29 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_10.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_10.c
index 13def8e..fc8ec4d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_11.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_11.c
index d47690e..2b3ef8f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_12.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_12.c
index 15654c8..82b7a2b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -74,12 +74,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_13.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_13.c
index a2cfe2b..0469bbf 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_14.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_14.c
index a9489d0..7cf4350 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -84,7 +84,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_15.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_15.c
index c9ef82f..af46c4f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -104,7 +104,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_16.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_16.c
index a883c7a..57765e6 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_17.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_17.c
index aa3c44c..8fbb84c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_18.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_18.c
index fd772df..509cc73 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     if(data < 0) /* ensure we won't have an overflow */
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     if(data < 0) /* ensure we won't have an overflow */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_21.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_21.c
index 83442c2..721ae81 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -116,7 +116,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_22a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_22a.c
index f7e8968..7bd8151 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__short_rand_multiply_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__short_rand_multiply_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__short_rand_multiply_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_31.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_31.c
index ae66f1d..6e1e487 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_32.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_32.c
index 1a5ccf5..2248571 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_33.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_33.cpp
index 19790e5..0efb1e2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_33.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_33.cpp
@@ -28,7 +28,7 @@ void bad()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         if(data < 0) /* ensure we won't have an overflow */
@@ -70,7 +70,7 @@ static void goodB2G()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         if(data < 0) /* ensure we won't have an overflow */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_34.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_34.c
index f00c4e9..76d9389 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_34_bad()
     CWE191_Integer_Underflow__short_rand_multiply_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_multiply_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_41.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_41.c
index 5510b35..ab26118 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -85,7 +85,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_42.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_42.c
index 16b2e38..08f8857 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_43.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_43.cpp
index 1955476..8e1b5bc 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_43.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_43.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__short_rand_multiply_43
 static void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
@@ -69,7 +69,7 @@ static void goodG2B()
 static void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_44.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_44.c
index f9b1cbb..2e801e9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -90,7 +90,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_45.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_45.c
index 8d6b06c..1d750f3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_45_badData = data;
     badSink();
 }
@@ -94,7 +94,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_51a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_51a.c
index 91fa389..9ed83ae 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_52a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_52a.c
index 3d969d0..7f944c8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_53a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_53a.c
index 5e6ac08..5278ab2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_54a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_54a.c
index f9d9918..37c3024 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_61b.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_61b.c
index 4638047..9c2304a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE191_Integer_Underflow__short_rand_multiply_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE191_Integer_Underflow__short_rand_multiply_61b_goodG2BSource(short data
 short CWE191_Integer_Underflow__short_rand_multiply_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_62b.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_62b.cpp
index 21616e2..6e3b76a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_62b.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__short_rand_multiply_62
 void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(short &data)
 void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_63a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_63a.c
index fe444a9..4f09930 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_64a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_64a.c
index 3167051..f216489 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_65a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_65a.c
index 2de9ae4..d462d98 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_65_bad()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_multiply_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_multiply_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_66a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_66a.c
index d6744d9..3278d12 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_multiply_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_multiply_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_67a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_67a.c
index fba953d..b499f2a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_67_bad()
     CWE191_Integer_Underflow__short_rand_multiply_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_multiply_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_multiply_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_multiply_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_68a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_68a.c
index 42b6434..8c6a1b8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_multiply_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_68_badData = data;
     CWE191_Integer_Underflow__short_rand_multiply_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_68_goodB2GData = data;
     CWE191_Integer_Underflow__short_rand_multiply_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_72a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_72a.cpp
index ffc5e22..3c4f015 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_72a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_73a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_73a.cpp
index 4055027..dd879b4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_73a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_74a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_74a.cpp
index 5ffec6c..3d8d393 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_74a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_81a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_81a.cpp
index 9bdadf2..c594d25 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_81a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE191_Integer_Underflow__short_rand_multiply_81_base& baseObject = CWE191_Integer_Underflow__short_rand_multiply_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE191_Integer_Underflow__short_rand_multiply_81_base& baseObject = CWE191_Integer_Underflow__short_rand_multiply_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp
index bc06fce..75cf32c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_82_base* baseObject = new CWE191_Integer_Underflow__short_rand_multiply_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_multiply_82_base* baseObject = new CWE191_Integer_Underflow__short_rand_multiply_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_bad.cpp
index 629842f..af81985 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_multiply_83_bad::CWE191_Integer_Underflow__
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_multiply_83_bad::~CWE191_Integer_Underflow__short_rand_multiply_83_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G.cpp
index 23bf267..7500ec7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G::CWE191_Integer_Underfl
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G::~CWE191_Integer_Underflow__short_rand_multiply_83_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_bad.cpp
index d95cf53..801c114 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_multiply_84_bad::CWE191_Integer_Underflow__
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_multiply_84_bad::~CWE191_Integer_Underflow__short_rand_multiply_84_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G.cpp
index 08addb7..97e26ca 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G::CWE191_Integer_Underfl
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G::~CWE191_Integer_Underflow__short_rand_multiply_84_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_01.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_01.c
index 3ab1767..0d3579e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_sub_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Subtracting 1 from data could cause an underflow */
         short result = data - 1;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > SHRT_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_02.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_02.c
index 70afcb6..904b578 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_03.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_03.c
index 16c588c..8cab2d8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_04.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_04.c
index e2b5592..83b4ea5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_sub_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_05.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_05.c
index 8fe5cfb..772f7b5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_sub_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -86,7 +86,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_06.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_06.c
index f0a84db..418ac85 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_sub_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_07.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_07.c
index f791d76..d5ca33a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_sub_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -55,7 +55,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -85,7 +85,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_08.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_08.c
index a711c9b..3e7b533 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_sub_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -63,7 +63,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -93,7 +93,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_09.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_09.c
index a5e25ff..8bdad05 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_10.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_10.c
index 01e5924..90897ca 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_11.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_11.c
index de178b8..58721cb 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_12.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_12.c
index de7a0dc..f6f21ac 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -70,12 +70,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_13.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_13.c
index df12b4b..d45b36f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_14.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_14.c
index 5a8d2ee..e490c56 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -50,7 +50,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -80,7 +80,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_15.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_15.c
index d4de597..7be3a6a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -63,7 +63,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -100,7 +100,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_16.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_16.c
index 61d8b1a..695716a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -52,7 +52,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_17.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_17.c
index a9dce08..cf45a69 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -52,7 +52,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_18.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_18.c
index 2b4bc17..4faf035 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_sub_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -48,7 +48,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_21.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_21.c
index 13f7cbe..556a68b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_21.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_sub_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -81,7 +81,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -109,7 +109,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_22a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_22a.c
index 9b04613..d5e4b67 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_sub_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__short_rand_sub_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__short_rand_sub_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__short_rand_sub_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_31.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_31.c
index 595572f..c9274f5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_sub_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -64,7 +64,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_32.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_32.c
index c093864..a2a9c4e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_sub_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -78,7 +78,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_33.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_33.cpp
index 21295f2..fe4a9e6 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_33.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_33.cpp
@@ -28,7 +28,7 @@ void bad()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
@@ -68,7 +68,7 @@ static void goodB2G()
     short &dataRef = data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_34.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_34.c
index dc78ee3..6f8f61c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_sub_34_bad()
     CWE191_Integer_Underflow__short_rand_sub_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -73,7 +73,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_sub_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_41.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_41.c
index e15bea0..516f7df 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_41.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__short_rand_sub_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -80,7 +80,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_42.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_42.c
index d4f5feb..1bd3bd5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -66,7 +66,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_43.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_43.cpp
index 82ff2ac..251dee3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_43.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_43.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__short_rand_sub_43
 static void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
@@ -67,7 +67,7 @@ static void goodG2B()
 static void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 static void goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_44.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_44.c
index fb8a401..a09037f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_44.c
@@ -35,7 +35,7 @@ void CWE191_Integer_Underflow__short_rand_sub_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -85,7 +85,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_45.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_45.c
index eb23802..1367902 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_45.c
@@ -38,7 +38,7 @@ void CWE191_Integer_Underflow__short_rand_sub_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_45_badData = data;
     badSink();
 }
@@ -89,7 +89,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_51a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_51a.c
index a1c53cb..5380255 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_52a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_52a.c
index 0527b1a..1f71603 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_53a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_53a.c
index 7981340..3e6e19e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_54a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_54a.c
index 7d3ce31..785fb29 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_61b.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_61b.c
index fe8614b..2e4b18e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE191_Integer_Underflow__short_rand_sub_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE191_Integer_Underflow__short_rand_sub_61b_goodG2BSource(short data)
 short CWE191_Integer_Underflow__short_rand_sub_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_62b.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_62b.cpp
index ae26a53..a83dec8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_62b.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_62b.cpp
@@ -25,7 +25,7 @@ namespace CWE191_Integer_Underflow__short_rand_sub_62
 void badSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
@@ -43,7 +43,7 @@ void goodG2BSource(short &data)
 void goodB2GSource(short &data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITGOOD */
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_63a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_63a.c
index dfae91e..d355482 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_64a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_64a.c
index d85fb84..47999d4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_sub_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_65a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_65a.c
index 4b3ecf2..9a15f32 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_sub_65_bad()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_sub_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_sub_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_66a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_66a.c
index e3c394f..373a321 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_sub_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_sub_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_sub_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_67a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_67a.c
index 54e39cc..d303b45 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__short_rand_sub_67_bad()
     CWE191_Integer_Underflow__short_rand_sub_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_sub_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_sub_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_sub_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_68a.c b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_68a.c
index 0245c1f..ef00826 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_sub_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_68_badData = data;
     CWE191_Integer_Underflow__short_rand_sub_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_68_goodB2GData = data;
     CWE191_Integer_Underflow__short_rand_sub_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_72a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_72a.cpp
index 0373e66..fcf951b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_72a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
@@ -72,7 +72,7 @@ static void goodB2G()
     vector<short> dataVector;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_73a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_73a.cpp
index 07cfe85..4c913a1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_73a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
@@ -72,7 +72,7 @@ static void goodB2G()
     list<short> dataList;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataList.push_back(data);
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_74a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_74a.cpp
index ed42744..25b93f3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_74a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
@@ -72,7 +72,7 @@ static void goodB2G()
     map<int, short> dataMap;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataMap[0] = data;
     dataMap[1] = data;
     dataMap[2] = data;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_81a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_81a.cpp
index cff4a45..5811108 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_81a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE191_Integer_Underflow__short_rand_sub_81_base& baseObject = CWE191_Integer_Underflow__short_rand_sub_81_bad();
     baseObject.action(data);
 }
@@ -54,7 +54,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE191_Integer_Underflow__short_rand_sub_81_base& baseObject = CWE191_Integer_Underflow__short_rand_sub_81_goodB2G();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_82a.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_82a.cpp
index ae40aaa..19a3539 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_82a.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_82_base* baseObject = new CWE191_Integer_Underflow__short_rand_sub_82_bad;
     baseObject->action(data);
     delete baseObject;
@@ -56,7 +56,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_sub_82_base* baseObject = new CWE191_Integer_Underflow__short_rand_sub_82_goodB2G;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_bad.cpp
index 28e9691..fe77f6a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_sub_83_bad::CWE191_Integer_Underflow__short
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_sub_83_bad::~CWE191_Integer_Underflow__short_rand_sub_83_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_goodB2G.cpp
index b33231c..45a8398 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_83_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_sub_83_goodB2G::CWE191_Integer_Underflow__s
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_sub_83_goodB2G::~CWE191_Integer_Underflow__short_rand_sub_83_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_bad.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_bad.cpp
index 314b2b3..530f615 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_bad.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_bad.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_sub_84_bad::CWE191_Integer_Underflow__short
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_sub_84_bad::~CWE191_Integer_Underflow__short_rand_sub_84_bad()
diff --git a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_goodB2G.cpp b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_goodB2G.cpp
index 1d20f1c..6a9689e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_goodB2G.cpp
+++ b/C/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_rand_sub_84_goodB2G.cpp
@@ -25,7 +25,7 @@ CWE191_Integer_Underflow__short_rand_sub_84_goodB2G::CWE191_Integer_Underflow__s
 {
     data = dataCopy;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE191_Integer_Underflow__short_rand_sub_84_goodB2G::~CWE191_Integer_Underflow__short_rand_sub_84_goodB2G()
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_01.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_01.c
index 1fe8b69..6dc6999 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Decrementing data could cause an underflow */
         data--;
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > CHAR_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_02.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_02.c
index fb8939f..242bc42 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_03.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_03.c
index 9c99d24..1257b1b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_04.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_04.c
index 635e4af..d8916e7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_05.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_05.c
index 3a14d0a..1f1f520 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_06.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_06.c
index 4cf9b03..02095ba 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_07.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_07.c
index d9732fa..0a59bf8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_08.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_08.c
index 44d5067..47cfc08 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_09.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_09.c
index ddf6d31..16883d5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_10.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_10.c
index 3bcd2e2..10bd506 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_11.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_11.c
index 5c21c16..5b43d03 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_12.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_12.c
index 64bb8d9..5ad0436 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_13.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_13.c
index 76383a0..5d81d9c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_14.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_14.c
index d907820..6971803 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_15.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_15.c
index c63d9a2..58a7519 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_16.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_16.c
index 83db4e9..ff91c46 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_17.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_17.c
index e1a8bd3..7f20a7e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_18.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_18.c
index f91accc..e3e2212 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_21.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_21.c
index 9755ea8..9d7791f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_22a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_22a.c
index 2895fd9..3cd5128 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__char_rand_postdec_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__char_rand_postdec_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_31.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_31.c
index 3b83bb0..e6666f5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_32.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_32.c
index 439363b..de402ea 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_34.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_34.c
index 4afa230..5bcb67a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_34_bad()
     CWE191_Integer_Underflow__char_rand_postdec_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_postdec_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_41.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_41.c
index 8f0032e..6cc4252 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_42.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_42.c
index d4fd12e..e386e01 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_44.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_44.c
index 1202b46..0284ec4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_45.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_45.c
index 8ebf65a..c5493a1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_51a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_51a.c
index 9c7147d..b6fa7a4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_52a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_52a.c
index 2ea181c..ac4160f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_53a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_53a.c
index 503e267..e1ac188 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_54a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_54a.c
index de55bca..f353f25 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_61b.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_61b.c
index 5a20912..28acb81 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE191_Integer_Underflow__char_rand_postdec_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE191_Integer_Underflow__char_rand_postdec_61b_goodG2BSource(char data)
 char CWE191_Integer_Underflow__char_rand_postdec_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_63a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_63a.c
index 6f622fe..f29bd35 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_64a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_64a.c
index 81c74a3..632d918 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_65a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_65a.c
index 8f945ba..970deac 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_65_bad()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_postdec_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_postdec_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_66a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_66a.c
index 63d8f13..90da02f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_postdec_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_postdec_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_67a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_67a.c
index d0c2a55..67529e1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_67_bad()
     CWE191_Integer_Underflow__char_rand_postdec_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_postdec_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_postdec_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_postdec_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_68a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_68a.c
index 372c699..4da2287 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__char_rand_postdec_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_postdec_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_68_badData = data;
     CWE191_Integer_Underflow__char_rand_postdec_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_postdec_68_goodB2GData = data;
     CWE191_Integer_Underflow__char_rand_postdec_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_01.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_01.c
index 9dc3ff7..f1c9b10 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Decrementing data could cause an underflow */
         data--;
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > SHRT_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_02.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_02.c
index 7969e9f..de20f1b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_03.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_03.c
index 19ae292..287c11b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_04.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_04.c
index 65a0fc0..d25c56a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_05.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_05.c
index 972d0e9..aa98bb8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_06.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_06.c
index 0cdba84..1773054 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_07.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_07.c
index b4db4a8..9832863 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_08.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_08.c
index a6bb367..bf9e114 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_09.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_09.c
index 367c16d..4c4a5e3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_10.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_10.c
index a715ff3..ca2b9fe 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_11.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_11.c
index fb193e3..2eb64f2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_12.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_12.c
index 1e8b176..4d87fee 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_13.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_13.c
index ecde710..31629f1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_14.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_14.c
index f44665d..e6944ae 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_15.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_15.c
index ce8f429..a5c4baa 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_16.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_16.c
index 4dd9422..a75747a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_17.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_17.c
index 82f3d45..aa8f2f2 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_18.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_18.c
index babffab..604eea9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_21.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_21.c
index 4661acd..3f335ac 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_22a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_22a.c
index e1e242a..99a7e33 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__short_rand_postdec_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__short_rand_postdec_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_31.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_31.c
index 80b1e4b..774588d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_32.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_32.c
index 4c4abcc..b4ff191 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_34.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_34.c
index 891d67f..901ba31 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_34_bad()
     CWE191_Integer_Underflow__short_rand_postdec_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_postdec_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_41.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_41.c
index e63284e..38e4cf5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_42.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_42.c
index 10bff7f..ab18b7d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_44.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_44.c
index a11e5c6..192204a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_45.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_45.c
index 228ced8..4539e2d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_51a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_51a.c
index 8344986..f8631c9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_52a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_52a.c
index ee7414c..c81670a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_53a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_53a.c
index a99c92d..30b2be1 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_54a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_54a.c
index 3750e66..39ae99f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_61b.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_61b.c
index 149a9d6..8978747 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE191_Integer_Underflow__short_rand_postdec_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE191_Integer_Underflow__short_rand_postdec_61b_goodG2BSource(short data)
 short CWE191_Integer_Underflow__short_rand_postdec_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_63a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_63a.c
index 180b771..0de3730 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_64a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_64a.c
index 39bbdc0..09f50f7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_65a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_65a.c
index a72a27a..633a44c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_65_bad()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_postdec_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_postdec_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_66a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_66a.c
index 7947db0..9695acc 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_postdec_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_postdec_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_67a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_67a.c
index 009e4da..94e119f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_67_bad()
     CWE191_Integer_Underflow__short_rand_postdec_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_postdec_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_postdec_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_postdec_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_68a.c b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_68a.c
index fb21591..00d5507 100644
--- a/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_rand_postdec_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_postdec_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_68_badData = data;
     CWE191_Integer_Underflow__short_rand_postdec_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_postdec_68_goodB2GData = data;
     CWE191_Integer_Underflow__short_rand_postdec_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_01.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_01.c
index d4fbff4..9783922 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_predec_01_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         /* POTENTIAL FLAW: Decrementing data could cause an underflow */
         --data;
@@ -58,7 +58,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > CHAR_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_02.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_02.c
index ea91923..a1230e0 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_03.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_03.c
index ecb31c0..567c7be 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_04.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_04.c
index bcc49e2..8ba718d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_predec_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_05.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_05.c
index 6088c1e..87cf733 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__char_rand_predec_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_06.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_06.c
index cde1514..28c04d0 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_predec_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_07.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_07.c
index c988c13..93ba791 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_predec_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_08.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_08.c
index 36d0070..4a6bb63 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_predec_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_09.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_09.c
index bc22635..d6a1ac0 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_10.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_10.c
index fed7e4e..a62f070 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_11.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_11.c
index 43ece7a..37c2b83 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_12.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_12.c
index 892863e..329fe4b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_13.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_13.c
index 3cc2db1..3b7cd5f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_14.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_14.c
index aa30177..a4c3bbc 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_15.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_15.c
index 2ed67dc..0e4900d 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_16.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_16.c
index 6a95a7b..eb75b02 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_17.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_17.c
index 614943a..0b3daed 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_18.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_18.c
index fa7948a..504efbe 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__char_rand_predec_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_21.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_21.c
index 33d9802..e0e5ce3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__char_rand_predec_21_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_22a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_22a.c
index c734505..ca45d84 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_predec_22_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__char_rand_predec_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__char_rand_predec_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__char_rand_predec_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_31.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_31.c
index 39a6bd8..01b5428 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__char_rand_predec_31_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     {
         char dataCopy = data;
         char data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_32.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_32.c
index 966bba6..d3c08f5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_predec_32_bad()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         char data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (char)RAND32();
+        data = RAND8();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_34.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_34.c
index 9da6542..322b0fb 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_predec_34_bad()
     CWE191_Integer_Underflow__char_rand_predec_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_predec_34_unionType myUnion;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myUnion.unionFirst = data;
     {
         char data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_41.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_41.c
index 94b7d21..d8ca833 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__char_rand_predec_41_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_42.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_42.c
index 81bb4cf..2f58e4b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static char badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static char goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_44.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_44.c
index 8a99803..249a5e9 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__char_rand_predec_44_bad()
     void (*funcPtr) (char) = badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (char) = goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_45.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_45.c
index 00c8d22..0cb86e8 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__char_rand_predec_45_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_51a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_51a.c
index b0ee06a..f53db7a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_51_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_52a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_52a.c
index 046037c..eb1491e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_52_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_53a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_53a.c
index 51210ae..1e3bb82 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_53_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_54a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_54a.c
index ddc4120..bd34a27 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_54_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_61b.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_61b.c
index ef9185f..8aef726 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 char CWE191_Integer_Underflow__char_rand_predec_61b_badSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
@@ -42,7 +42,7 @@ char CWE191_Integer_Underflow__char_rand_predec_61b_goodG2BSource(char data)
 char CWE191_Integer_Underflow__char_rand_predec_61b_goodB2GSource(char data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_63a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_63a.c
index 92c791c..99ee919 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_63_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_64a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_64a.c
index 7fafcf9..66d04d4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__char_rand_predec_64_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_65a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_65a.c
index 9b49fba..8acfc6e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__char_rand_predec_65_bad()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_predec_65b_badSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (char) = CWE191_Integer_Underflow__char_rand_predec_65b_goodB2GSink;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_66a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_66a.c
index ee7a1e2..618fdd7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__char_rand_predec_66_bad()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_predec_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     char dataArray[5];
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     dataArray[2] = data;
     CWE191_Integer_Underflow__char_rand_predec_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_67a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_67a.c
index e36683c..83ad699 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__char_rand_predec_67_bad()
     CWE191_Integer_Underflow__char_rand_predec_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_predec_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__char_rand_predec_67_structType myStruct;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__char_rand_predec_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68a.c
index 8c3d043..a20a98a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__char_rand_predec_68_bad()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_68_badData = data;
     CWE191_Integer_Underflow__char_rand_predec_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     char data;
     data = ' ';
     /* POTENTIAL FLAW: Use a random value */
-    data = (char)RAND32();
+    data = RAND8();
     CWE191_Integer_Underflow__char_rand_predec_68_goodB2GData = data;
     CWE191_Integer_Underflow__char_rand_predec_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_01.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_01.c
index 773e12c..917390a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_01.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_01.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_predec_01_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Decrementing data could cause an underflow */
         --data;
@@ -58,7 +58,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* FIX: Add a check to prevent an underflow from occurring */
     if (data > SHRT_MIN)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_02.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_02.c
index f893bc8..19f3cde 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_02.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_02.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_02_bad()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(0)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(1)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_03.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_03.c
index dd439c2..141c334 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_03.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_03.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_03_bad()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(5==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(5==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_04.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_04.c
index 6d8fccd..87e264b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_04.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_04.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_predec_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FALSE)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(STATIC_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_05.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_05.c
index 400f678..fe0b347 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_05.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_05.c
@@ -32,7 +32,7 @@ void CWE191_Integer_Underflow__short_rand_predec_05_bad()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
@@ -57,7 +57,7 @@ static void goodB2G1()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFalse)
     {
@@ -88,7 +88,7 @@ static void goodB2G2()
     if(staticTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_06.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_06.c
index 1f146a9..e05af7b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_06.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_06.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_predec_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(STATIC_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(STATIC_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_07.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_07.c
index 5ab6181..7f2cc4b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_07.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_07.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_predec_07_bad()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
@@ -56,7 +56,7 @@ static void goodB2G1()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive!=5)
     {
@@ -87,7 +87,7 @@ static void goodB2G2()
     if(staticFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_08.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_08.c
index 65e166c..b0142af 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_08.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_08.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_predec_08_bad()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
@@ -64,7 +64,7 @@ static void goodB2G1()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsFalse())
     {
@@ -95,7 +95,7 @@ static void goodB2G2()
     if(staticReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(staticReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_09.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_09.c
index a0b14f0..8589780 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_09.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_09.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FALSE)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_TRUE)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_TRUE)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_10.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_10.c
index 7a3bb21..43a0b42 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_10.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_10.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_10_bad()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFalse)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalTrue)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalTrue)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_11.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_11.c
index 5e0c658..6c7489e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_11.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_11.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_11_bad()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsFalse())
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalReturnsTrue())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrue())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_12.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_12.c
index 9148f3c..9a97dda 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_12.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_12.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
@@ -72,12 +72,12 @@ static void goodB2G()
     if(globalReturnsTrueOrFalse())
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalReturnsTrueOrFalse())
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_13.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_13.c
index c202d7f..eb9b980 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_13.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_13.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(GLOBAL_CONST_FIVE==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_14.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_14.c
index 791d77c..c92e5ba 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_14.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_14.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_14_bad()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
@@ -51,7 +51,7 @@ static void goodB2G1()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive!=5)
     {
@@ -82,7 +82,7 @@ static void goodB2G2()
     if(globalFive==5)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     if(globalFive==5)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_15.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_15.c
index 807be47..1bbac4c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_15.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_15.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_15_bad()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -64,7 +64,7 @@ static void goodB2G1()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -102,7 +102,7 @@ static void goodB2G2()
     {
     case 6:
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_16.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_16.c
index 25af2b5..16871c4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_16.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_16.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_16_bad()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
@@ -53,7 +53,7 @@ static void goodB2G()
     while(1)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     while(1)
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_17.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_17.c
index b7c5efa..9cd81d7 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_17.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_17.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(j = 0; j < 1; j++)
     {
@@ -53,7 +53,7 @@ static void goodB2G()
     for(i = 0; i < 1; i++)
     {
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
     }
     for(k = 0; k < 1; k++)
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_18.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_18.c
index 797f934..615b32c 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_18.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_18.c
@@ -26,7 +26,7 @@ void CWE191_Integer_Underflow__short_rand_predec_18_bad()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     {
@@ -49,7 +49,7 @@ static void goodB2G()
     goto source;
 source:
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goto sink;
 sink:
     /* FIX: Add a check to prevent an underflow from occurring */
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_21.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_21.c
index f681e40..261c29e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_21.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_21.c
@@ -40,7 +40,7 @@ void CWE191_Integer_Underflow__short_rand_predec_21_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badStatic = 1; /* true */
     badSink(data);
 }
@@ -83,7 +83,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G1Static = 0; /* false */
     goodB2G1Sink(data);
 }
@@ -112,7 +112,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2G2Static = 1; /* true */
     goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_22a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_22a.c
index 78aadf2..125da13 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_22a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_22a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_predec_22_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_22_badGlobal = 1; /* true */
     CWE191_Integer_Underflow__short_rand_predec_22_badSink(data);
 }
@@ -51,7 +51,7 @@ static void goodB2G1()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_22_goodB2G1Global = 0; /* false */
     CWE191_Integer_Underflow__short_rand_predec_22_goodB2G1Sink(data);
 }
@@ -64,7 +64,7 @@ static void goodB2G2()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_22_goodB2G2Global = 1; /* true */
     CWE191_Integer_Underflow__short_rand_predec_22_goodB2G2Sink(data);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_31.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_31.c
index 4adf113..b388e9f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_31.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_31.c
@@ -24,7 +24,7 @@ void CWE191_Integer_Underflow__short_rand_predec_31_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
@@ -66,7 +66,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_32.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_32.c
index e4327a4..55fb1f4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_32.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_32.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_predec_32_bad()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
@@ -80,7 +80,7 @@ static void goodB2G()
     {
         short data = *dataPtr1;
         /* POTENTIAL FLAW: Use a random value */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_34.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_34.c
index 9a9ec32..215a604 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_34.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_34.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_predec_34_bad()
     CWE191_Integer_Underflow__short_rand_predec_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
@@ -75,7 +75,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_predec_34_unionType myUnion;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_41.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_41.c
index d45b48f..6daf9db 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_41.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_41.c
@@ -34,7 +34,7 @@ void CWE191_Integer_Underflow__short_rand_predec_41_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     badSink(data);
 }
 
@@ -83,7 +83,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_42.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_42.c
index 23ae526..fbea4f0 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_42.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_42.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-42.tmpl.c
 static short badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -68,7 +68,7 @@ static void goodG2B()
 static short goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_44.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_44.c
index 448767d..d87de0e 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_44.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_44.c
@@ -36,7 +36,7 @@ void CWE191_Integer_Underflow__short_rand_predec_44_bad()
     void (*funcPtr) (short) = badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -88,7 +88,7 @@ static void goodB2G()
     void (*funcPtr) (short) = goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_45.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_45.c
index bfaf063..a1e4869 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_45.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_45.c
@@ -39,7 +39,7 @@ void CWE191_Integer_Underflow__short_rand_predec_45_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_45_badData = data;
     badSink();
 }
@@ -92,7 +92,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_45_goodB2GData = data;
     goodB2GSink();
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_51a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_51a.c
index 00bcbbe..33b859f 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_51a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_51a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_51_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_51b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_51b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_52a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_52a.c
index 7828802..727b928 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_52a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_52a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_52_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_52b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_52b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_53a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_53a.c
index 5c739f5..7be4191 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_53a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_53a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_53_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_53b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_53b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_54a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_54a.c
index 3e5a2ec..6f6375b 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_54a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_54a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_54_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_54b_badSink(data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_54b_goodB2GSink(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_61b.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_61b.c
index 497801c..fad92fa 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_61b.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_61b.c
@@ -22,7 +22,7 @@ Template File: sources-sinks-61b.tmpl.c
 short CWE191_Integer_Underflow__short_rand_predec_61b_badSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
@@ -42,7 +42,7 @@ short CWE191_Integer_Underflow__short_rand_predec_61b_goodG2BSource(short data)
 short CWE191_Integer_Underflow__short_rand_predec_61b_goodB2GSource(short data)
 {
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_63a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_63a.c
index a856045..b9a60e4 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_63a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_63a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_63_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_63b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_63b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_64a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_64a.c
index d7b1298..91c327a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_64a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_64a.c
@@ -27,7 +27,7 @@ void CWE191_Integer_Underflow__short_rand_predec_64_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_64b_badSink(&data);
 }
 
@@ -55,7 +55,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_64b_goodB2GSink(&data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_65a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_65a.c
index 1c956fe..e91310a 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_65a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_65a.c
@@ -29,7 +29,7 @@ void CWE191_Integer_Underflow__short_rand_predec_65_bad()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_predec_65b_badSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
@@ -60,7 +60,7 @@ static void goodB2G()
     void (*funcPtr) (short) = CWE191_Integer_Underflow__short_rand_predec_65b_goodB2GSink;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     funcPtr(data);
 }
 
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_66a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_66a.c
index 7b91a6b..11423f3 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_66a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_66a.c
@@ -28,7 +28,7 @@ void CWE191_Integer_Underflow__short_rand_predec_66_bad()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_predec_66b_badSink(dataArray);
@@ -61,7 +61,7 @@ static void goodB2G()
     short dataArray[5];
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     dataArray[2] = data;
     CWE191_Integer_Underflow__short_rand_predec_66b_goodB2GSink(dataArray);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_67a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_67a.c
index 367680d..8e86aa5 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_67a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_67a.c
@@ -33,7 +33,7 @@ void CWE191_Integer_Underflow__short_rand_predec_67_bad()
     CWE191_Integer_Underflow__short_rand_predec_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_predec_67b_badSink(myStruct);
 }
@@ -65,7 +65,7 @@ static void goodB2G()
     CWE191_Integer_Underflow__short_rand_predec_67_structType myStruct;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE191_Integer_Underflow__short_rand_predec_67b_goodB2GSink(myStruct);
 }
diff --git a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_68a.c b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_68a.c
index 039b424..95db371 100644
--- a/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_68a.c
+++ b/C/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_rand_predec_68a.c
@@ -31,7 +31,7 @@ void CWE191_Integer_Underflow__short_rand_predec_68_bad()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_68_badData = data;
     CWE191_Integer_Underflow__short_rand_predec_68b_badSink();
 }
@@ -61,7 +61,7 @@ static void goodB2G()
     short data;
     data = 0;
     /* POTENTIAL FLAW: Use a random value */
-    data = (short)RAND32();
+    data = RAND16();
     CWE191_Integer_Underflow__short_rand_predec_68_goodB2GData = data;
     CWE191_Integer_Underflow__short_rand_predec_68b_goodB2GSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c
index 2a281bd..fcf4de8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_01.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_01_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_02.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_02.c
index afd2286..85d7df2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_02.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_02.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_02_bad()
     if(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_03.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_03.c
index aac371c..6c0c517 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_03.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_03.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_03_bad()
     if(5==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c
index 91e076b..9d49cba 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_05.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_05.c
index 0bc897a..a5f96f4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_05.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_05.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_05_bad()
     if(staticTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_06.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_06.c
index c75894a..11b64cc 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_06.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_06.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_07.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_07.c
index 912f0fc..cba2723 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_07.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_07.c
@@ -32,7 +32,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_07_bad()
     if(staticFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_08.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_08.c
index 435c926..044987f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_08.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_08.c
@@ -40,7 +40,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_08_bad()
     if(staticReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_09.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_09.c
index 651f7bc..badd9cb 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_09.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_09.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_10.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_10.c
index 2611ff6..d2583e9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_10.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_10.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_10_bad()
     if(globalTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_11.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_11.c
index 87b13a9..34187af 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_11.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_11.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_11_bad()
     if(globalReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c
index 834cd69..a1a0c61 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_13.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_13.c
index aac7c98..bfe0631 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_13.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_13.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_14.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_14.c
index 1715433..74d35a6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_14.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_14.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_14_bad()
     if(globalFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_15.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_15.c
index be9192a..f3d98f6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_15.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_15.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_15_bad()
     {
     case 6:
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c
index cbfefff..6b1918f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_16.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_16_bad()
     while(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     /* Assume we want to allocate a relatively small buffer */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_17.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_17.c
index 1d8f93d..b5ca35b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_17.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_17.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_18.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_18.c
index a1445e5..1c2315a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_18.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_18.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_18_bad()
     goto source;
 source:
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Assume we want to allocate a relatively small buffer */
     if (data < 100)
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c
index 2f409aa..6be145d 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_21.c
@@ -26,7 +26,7 @@ static short badSource(short data)
     if(badStatic)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_22b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_22b.c
index a49a988..40de191 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_22b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_22b.c
@@ -26,7 +26,7 @@ short CWE194_Unexpected_Sign_Extension__rand_malloc_22_badSource(short data)
     if(CWE194_Unexpected_Sign_Extension__rand_malloc_22_badGlobal)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_31.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_31.c
index 817d8af..f4bc97b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_31.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_31.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_31_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_32.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_32.c
index c1ca15f..319e9e5 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_32.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_32.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_32_bad()
     {
         short data = *dataPtr1;
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_33.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_33.cpp
index 3567205..4c2e057 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_33.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_33.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         /* Assume we want to allocate a relatively small buffer */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c
index 9527fd0..1e65e88 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c
@@ -31,7 +31,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_34_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c
index 5378610..eaf7a09 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_41.c
@@ -41,7 +41,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_41_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_41_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_42.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_42.c
index 0ab7d29..8f1cc96 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_42.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_42.c
@@ -21,7 +21,7 @@ Template File: sources-sink-42.tmpl.c
 static short badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_43.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_43.cpp
index e905251..9646aa0 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_43.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_43.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_malloc_43
 static void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c
index 41b8004..f571da2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_44.c
@@ -43,7 +43,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_44_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_45.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_45.c
index 7b03262..6f835d8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_45.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_45.c
@@ -45,7 +45,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_45_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_45_badData = data;
     badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_51a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_51a.c
index a936b33..a264fa9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_51a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_51a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_51_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_51b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_52a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_52a.c
index 70b4aed..743eeea 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_52a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_52a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_52_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_52b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_53a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_53a.c
index 342cf69..cf37b9d 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_53a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_53a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_53_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_53b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_54a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_54a.c
index 2945960..00a54d3 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_54a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_54a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_54_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_54b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_61b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_61b.c
index 5e5d715..ef0a414 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_61b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_61b.c
@@ -21,7 +21,7 @@ Template File: sources-sink-61b.tmpl.c
 short CWE194_Unexpected_Sign_Extension__rand_malloc_61b_badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_62b.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_62b.cpp
index a3cfb79..6779cb6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_62b.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_62b.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_malloc_62
 void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_63a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_63a.c
index 01fb606..51a0d96 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_63a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_63a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_63_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_63b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64a.c
index cb5d1f6..26488ef 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_64a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_64_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_64b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_65a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_65a.c
index 776fb46..37053ed 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_65a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_65a.c
@@ -29,7 +29,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_65_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_66a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_66a.c
index 8802c1d..b2c6499 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_66a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_66a.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_66_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE194_Unexpected_Sign_Extension__rand_malloc_66b_badSink(dataArray);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_67a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_67a.c
index 0b4dd74..5ceae90 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_67a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_67a.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_67_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE194_Unexpected_Sign_Extension__rand_malloc_67b_badSink(myStruct);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_68a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_68a.c
index f049624..4e8a15b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_68a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_68a.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_malloc_68_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_68_badData = data;
     CWE194_Unexpected_Sign_Extension__rand_malloc_68b_badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_72a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_72a.cpp
index 75d0df1..862d49b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_72a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_73a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_73a.cpp
index aac9ffa..2ed0022 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_73a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_74a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_74a.cpp
index 216ab06..52acbbb 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_74a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_81a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_81a.cpp
index d5cd5d5..02d3fac 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_81a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE194_Unexpected_Sign_Extension__rand_malloc_81_base& baseObject = CWE194_Unexpected_Sign_Extension__rand_malloc_81_bad();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_82a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_82a.cpp
index 4e0ebc5..a00905f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_82a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_malloc_82_base* baseObject = new CWE194_Unexpected_Sign_Extension__rand_malloc_82_bad;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad.cpp
index 46f0a15..0c77453 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad::CWE194_Unexpected_Sign_Ext
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad::~CWE194_Unexpected_Sign_Extension__rand_malloc_83_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad.cpp
index 4b26d38..34e3041 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad::CWE194_Unexpected_Sign_Ext
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad::~CWE194_Unexpected_Sign_Extension__rand_malloc_84_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_01.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_01.c
index 87bb900..3a53b6a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_01.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_01.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_01_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_02.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_02.c
index 7a5b987..e9b7959 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_02.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_02.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_02_bad()
     if(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_03.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_03.c
index aa162b2..5b57eb8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_03.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_03.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_03_bad()
     if(5==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_04.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_04.c
index ef04d7d..9550eed 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_04.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_04.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_05.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_05.c
index 326757b..d0c1e3a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_05.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_05.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_05_bad()
     if(staticTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c
index 6428b33..9ab0a38 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_06.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_07.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_07.c
index 9a942bd..ecac552 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_07.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_07.c
@@ -32,7 +32,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_07_bad()
     if(staticFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_08.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_08.c
index 158d062..da0a887 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_08.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_08.c
@@ -40,7 +40,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_08_bad()
     if(staticReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_09.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_09.c
index b8f337c..77a59c0 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_09.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_09.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_10.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_10.c
index f1155e1..14909b7 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_10.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_10.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_10_bad()
     if(globalTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_11.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_11.c
index d11cbaa..2df5f75 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_11.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_11.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_11_bad()
     if(globalReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_12.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_12.c
index daeebc7..a6a38a4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_12.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_12.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_13.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_13.c
index 090530b..17640e4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_13.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_13.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_14.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_14.c
index b84eb14..4310df8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_14.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_14.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_14_bad()
     if(globalFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_15.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_15.c
index 380419e..ad982b0 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_15.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_15.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_15_bad()
     {
     case 6:
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_16.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_16.c
index 9c0f549..c0a4882 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_16.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_16.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_16_bad()
     while(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_17.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_17.c
index f5dc89b..f571dd2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_17.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_17.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_18.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_18.c
index 117c0b8..e286886 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_18.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_18.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_18_bad()
     goto source;
 source:
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_21.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_21.c
index 43135bf..ca19bf1 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_21.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_21.c
@@ -26,7 +26,7 @@ static short badSource(short data)
     if(badStatic)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c
index 6ab470f..0579b52 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c
@@ -26,7 +26,7 @@ short CWE194_Unexpected_Sign_Extension__rand_memcpy_22_badSource(short data)
     if(CWE194_Unexpected_Sign_Extension__rand_memcpy_22_badGlobal)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_31.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_31.c
index a87645b..6b948a6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_31.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_31.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_31_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_32.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_32.c
index 3d9f464..8626282d 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_32.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_32.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_32_bad()
     {
         short data = *dataPtr1;
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_33.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_33.cpp
index 08f05fe..3569622 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_33.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_33.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c
index b571991..d0f89a4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c
@@ -31,7 +31,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_34_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c
index c8a612b..4ab6736 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c
@@ -42,7 +42,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_41_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_41_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_42.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_42.c
index 8e5ed33..9335f77 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_42.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_42.c
@@ -21,7 +21,7 @@ Template File: sources-sink-42.tmpl.c
 static short badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_43.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_43.cpp
index 4d1a73c..7a2004b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_43.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_43.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_memcpy_43
 static void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_44.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_44.c
index 30d194b..01d8526 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_44.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_44.c
@@ -44,7 +44,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_44_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_45.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_45.c
index eb2e438..2c1d8b5 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_45.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_45.c
@@ -46,7 +46,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_45_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_45_badData = data;
     badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_51a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_51a.c
index 0c0c603..d230bee 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_51a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_51a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_51_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_51b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_52a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_52a.c
index f7f94e6..5f9d44a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_52a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_52a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_52_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_52b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_53a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_53a.c
index 56330ff..b418670 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_53a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_53a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_53_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_53b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_54a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_54a.c
index f8e41f6..f060db0 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_54a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_54a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_54_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_54b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_61b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_61b.c
index a93e6e5..088a135 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_61b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_61b.c
@@ -21,7 +21,7 @@ Template File: sources-sink-61b.tmpl.c
 short CWE194_Unexpected_Sign_Extension__rand_memcpy_61b_badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_62b.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_62b.cpp
index da349f1..83aeab3 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_62b.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_62b.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_memcpy_62
 void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_63a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_63a.c
index 401b87c..8487c4b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_63a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_63a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_63_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_63b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_64a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_64a.c
index d4a1ec7..9416097 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_64a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_64a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_64_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_64b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_65a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_65a.c
index 7ac9338..174cb7a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_65a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_65a.c
@@ -29,7 +29,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_65_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_66a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_66a.c
index 3da0aee..ed12762 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_66a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_66a.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_66_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE194_Unexpected_Sign_Extension__rand_memcpy_66b_badSink(dataArray);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_67a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_67a.c
index 76d803c..5b01485 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_67a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_67a.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_67_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE194_Unexpected_Sign_Extension__rand_memcpy_67b_badSink(myStruct);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_68a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_68a.c
index 4c8b349..0e04478 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_68a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_68a.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memcpy_68_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_68_badData = data;
     CWE194_Unexpected_Sign_Extension__rand_memcpy_68b_badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_72a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_72a.cpp
index 630927a..cee92e2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_72a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_73a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_73a.cpp
index efa0649..57d8c25 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_73a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_74a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_74a.cpp
index d032940..11bebbd 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_74a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_81a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_81a.cpp
index 9112f3e..ed948ea 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_81a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE194_Unexpected_Sign_Extension__rand_memcpy_81_base& baseObject = CWE194_Unexpected_Sign_Extension__rand_memcpy_81_bad();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_82a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_82a.cpp
index 13af858..8be63c9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_82a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memcpy_82_base* baseObject = new CWE194_Unexpected_Sign_Extension__rand_memcpy_82_bad;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad.cpp
index 251cf23..39b0311 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad::CWE194_Unexpected_Sign_Ext
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad::~CWE194_Unexpected_Sign_Extension__rand_memcpy_83_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad.cpp
index 2aaeb38..457318e 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad::CWE194_Unexpected_Sign_Ext
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad::~CWE194_Unexpected_Sign_Extension__rand_memcpy_84_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_01.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_01.c
index 65f0a19..7aa1621 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_01.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_01.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_01_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_02.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_02.c
index c5b3c9f..d6d6a26 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_02.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_02.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_02_bad()
     if(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_03.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_03.c
index 5947f56..b38a7f9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_03.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_03.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_03_bad()
     if(5==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_04.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_04.c
index 429a7e1..19e2f9c 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_04.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_04.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_05.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_05.c
index 94a12fe..faf0e4b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_05.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_05.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_05_bad()
     if(staticTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_06.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_06.c
index 45367c5..8bb7c22 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_06.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_06.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_07.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_07.c
index cafb7f0..6b38594 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_07.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_07.c
@@ -32,7 +32,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_07_bad()
     if(staticFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_08.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_08.c
index 6e0b1ea..72ce33e 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_08.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_08.c
@@ -40,7 +40,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_08_bad()
     if(staticReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_09.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_09.c
index cf77555..8eaf471 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_09.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_09.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_10.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_10.c
index a92e575..7312451 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_10.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_10.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_10_bad()
     if(globalTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_11.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_11.c
index 79ff38f..751a637 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_11.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_11.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_11_bad()
     if(globalReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_12.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_12.c
index 1076c62..ad334f3 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_12.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_12.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_13.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_13.c
index 64d1e3c..1c79fcb 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_13.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_13.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_14.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_14.c
index ab89025..51d24ac 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_14.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_14.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_14_bad()
     if(globalFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_15.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_15.c
index b138ded..e27a169 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_15.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_15.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_15_bad()
     {
     case 6:
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_16.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_16.c
index c51bf20..be869de 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_16.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_16.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_16_bad()
     while(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_17.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_17.c
index 83400dd..060eb6f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_17.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_17.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c
index adf6197..afb3941 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_18.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_18_bad()
     goto source;
 source:
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_21.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_21.c
index a2986ff..54cd9cd 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_21.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_21.c
@@ -26,7 +26,7 @@ static short badSource(short data)
     if(badStatic)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_22b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_22b.c
index 8e5ce11..38d15c2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_22b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_22b.c
@@ -26,7 +26,7 @@ short CWE194_Unexpected_Sign_Extension__rand_memmove_22_badSource(short data)
     if(CWE194_Unexpected_Sign_Extension__rand_memmove_22_badGlobal)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c
index 170cf34..4eff9a8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_31.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_31_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_32.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_32.c
index 9dfcefd..8c4bc30 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_32.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_32.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_32_bad()
     {
         short data = *dataPtr1;
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_33.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_33.cpp
index bf0447d..a65abe0 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_33.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_33.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_34.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_34.c
index 7803d42..cf92f51 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_34.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_34.c
@@ -31,7 +31,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_34_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_41.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_41.c
index c78d561..0d882e7 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_41.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_41.c
@@ -42,7 +42,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_41_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_41_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_42.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_42.c
index 7254cf3..cc2197f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_42.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_42.c
@@ -21,7 +21,7 @@ Template File: sources-sink-42.tmpl.c
 static short badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_43.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_43.cpp
index 0dc7f22..83a371f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_43.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_43.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_memmove_43
 static void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_44.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_44.c
index ab35505..f5fff6f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_44.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_44.c
@@ -44,7 +44,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_44_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_45.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_45.c
index 0fb8e0c..ef712ac 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_45.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_45.c
@@ -46,7 +46,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_45_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_45_badData = data;
     badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_51a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_51a.c
index 68dca08..e41e7d9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_51a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_51a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_51_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_51b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52a.c
index 5e36786..8e2976c 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_52_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_52b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_53a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_53a.c
index 8447dbb..c968e5a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_53a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_53a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_53_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_53b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_54a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_54a.c
index 99d930f..88862da 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_54a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_54a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_54_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_54b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_61b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_61b.c
index 8fc3077..a73938f 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_61b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_61b.c
@@ -21,7 +21,7 @@ Template File: sources-sink-61b.tmpl.c
 short CWE194_Unexpected_Sign_Extension__rand_memmove_61b_badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62b.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62b.cpp
index 0f488c7..268bc49 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62b.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62b.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_memmove_62
 void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_63a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_63a.c
index 8cb8cb9..4a151db 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_63a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_63a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_63_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_63b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_64a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_64a.c
index 26053c4..7891ddd 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_64a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_64a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_64_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_64b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_65a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_65a.c
index 07add45..b5f38d6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_65a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_65a.c
@@ -29,7 +29,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_65_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_66a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_66a.c
index 0302494..0dde18d 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_66a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_66a.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_66_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE194_Unexpected_Sign_Extension__rand_memmove_66b_badSink(dataArray);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_67a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_67a.c
index b82a3e4..05e703c 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_67a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_67a.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_67_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE194_Unexpected_Sign_Extension__rand_memmove_67b_badSink(myStruct);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_68a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_68a.c
index 616ac4d..c94a1a1 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_68a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_68a.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_memmove_68_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_68_badData = data;
     CWE194_Unexpected_Sign_Extension__rand_memmove_68b_badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_72a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_72a.cpp
index 3631fd7..6f40984 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_72a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_73a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_73a.cpp
index 2e9baa2..696fcaf 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_73a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_74a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_74a.cpp
index 874a67c..4533ac2 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_74a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_81a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_81a.cpp
index 01b2ab8..1dd72b4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_81a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE194_Unexpected_Sign_Extension__rand_memmove_81_base& baseObject = CWE194_Unexpected_Sign_Extension__rand_memmove_81_bad();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_82a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_82a.cpp
index b4dcd08..b022100 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_82a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_memmove_82_base* baseObject = new CWE194_Unexpected_Sign_Extension__rand_memmove_82_bad;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad.cpp
index 31defe3..fd5e49e 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad::CWE194_Unexpected_Sign_Ex
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad::~CWE194_Unexpected_Sign_Extension__rand_memmove_83_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad.cpp
index c33f4df..b61ab46 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad::CWE194_Unexpected_Sign_Ex
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad::~CWE194_Unexpected_Sign_Extension__rand_memmove_84_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_01.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_01.c
index b2df372..db2f5d8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_01.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_01.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_01_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_02.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_02.c
index f98038f..f41802c 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_02.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_02.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_02_bad()
     if(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_03.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_03.c
index 0c43286..22d79e1 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_03.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_03.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_03_bad()
     if(5==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c
index 09cbc35..6863d08 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_05.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_05.c
index e2ab9bb..2d29424 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_05.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_05.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_05_bad()
     if(staticTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_06.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_06.c
index f6f87ed..a2c0ed8 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_06.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_06.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_07.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_07.c
index 58b62fc..89a10c9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_07.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_07.c
@@ -32,7 +32,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_07_bad()
     if(staticFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_08.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_08.c
index 5f69ccf..e64b9ba 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_08.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_08.c
@@ -40,7 +40,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_08_bad()
     if(staticReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_09.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_09.c
index bb52813..a4ee759 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_09.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_09.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_10.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_10.c
index 3fa6dcf..a1ab288 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_10.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_10.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_10_bad()
     if(globalTrue)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_11.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_11.c
index e72c797..b0c7eb9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_11.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_11.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_11_bad()
     if(globalReturnsTrue())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_12.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_12.c
index af6034e..f54cafd 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_12.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_12.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_13.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_13.c
index 596ae53..b234749 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_13.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_13.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_14.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_14.c
index 5656fc0..6792ad9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_14.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_14.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_14_bad()
     if(globalFive==5)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_15.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_15.c
index 003471d..f6ecb72 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_15.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_15.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_15_bad()
     {
     case 6:
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_16.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_16.c
index 00b4843..29556fe 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_16.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_16.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_16_bad()
     while(1)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_17.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_17.c
index 39a86e3..ce847ae 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_17.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_17.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         char source[100];
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_18.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_18.c
index a76f166..4fa7034 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_18.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_18.c
@@ -26,7 +26,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_18_bad()
     goto source;
 source:
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         char source[100];
         char dest[100] = "";
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_21.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_21.c
index 4a43b42..4925e35 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_21.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_21.c
@@ -26,7 +26,7 @@ static short badSource(short data)
     if(badStatic)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_22b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_22b.c
index 9952f9b..5694410 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_22b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_22b.c
@@ -26,7 +26,7 @@ short CWE194_Unexpected_Sign_Extension__rand_strncpy_22_badSource(short data)
     if(CWE194_Unexpected_Sign_Extension__rand_strncpy_22_badGlobal)
     {
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_31.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_31.c
index 7dd9add..46c53a5 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_31.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_31.c
@@ -24,7 +24,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_31_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_32.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_32.c
index dc4cdd3..2471de3 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_32.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_32.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_32_bad()
     {
         short data = *dataPtr1;
         /* FLAW: Use a random value that could be less than 0 */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp
index f06bc6e..1566710 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_33.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_34.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_34.c
index b1558e9..3ed3d12 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_34.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_34.c
@@ -31,7 +31,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_34_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_41.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_41.c
index 794e4e2..9cf8549 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_41.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_41.c
@@ -42,7 +42,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_41_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_41_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_42.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_42.c
index bcbfdfd..70d75fb 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_42.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_42.c
@@ -21,7 +21,7 @@ Template File: sources-sink-42.tmpl.c
 static short badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_43.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_43.cpp
index ebbf38a..050c332 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_43.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_43.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_strncpy_43
 static void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_44.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_44.c
index 2200cfa..97b5fac 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_44.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_44.c
@@ -44,7 +44,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_44_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_45.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_45.c
index 8205138..5056155 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_45.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_45.c
@@ -46,7 +46,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_45_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_45_badData = data;
     badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_51a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_51a.c
index b895b8a..8c9f755 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_51a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_51a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_51_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_51b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_52a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_52a.c
index 3d05271..e673242 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_52a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_52a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_52_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_52b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_53a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_53a.c
index 4381da8..87e618b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_53a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_53a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_53_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_53b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_54a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_54a.c
index 703ac12..4419a82 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_54a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_54a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_54_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_54b_badSink(data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_61b.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_61b.c
index 089280d..430142a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_61b.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_61b.c
@@ -21,7 +21,7 @@ Template File: sources-sink-61b.tmpl.c
 short CWE194_Unexpected_Sign_Extension__rand_strncpy_61b_badSource(short data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_62b.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_62b.cpp
index 7b5619e..6d21acb 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_62b.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_62b.cpp
@@ -24,7 +24,7 @@ namespace CWE194_Unexpected_Sign_Extension__rand_strncpy_62
 void badSource(short &data)
 {
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_63a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_63a.c
index 4e37bb4..bda4ccf 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_63a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_63a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_63_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_63b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_64a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_64a.c
index 16ca859..0c289b9 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_64a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_64a.c
@@ -27,7 +27,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_64_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_64b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_65a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_65a.c
index fef3053..ed36a3a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_65a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_65a.c
@@ -29,7 +29,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_65_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_66a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_66a.c
index 00f4774..114b104 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_66a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_66a.c
@@ -28,7 +28,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_66_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE194_Unexpected_Sign_Extension__rand_strncpy_66b_badSink(dataArray);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_67a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_67a.c
index 3a4696b..11f7bfa 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_67a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_67a.c
@@ -33,7 +33,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_67_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE194_Unexpected_Sign_Extension__rand_strncpy_67b_badSink(myStruct);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_68a.c b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_68a.c
index fa1589a..45c4b1b 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_68a.c
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_68a.c
@@ -30,7 +30,7 @@ void CWE194_Unexpected_Sign_Extension__rand_strncpy_68_bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_68_badData = data;
     CWE194_Unexpected_Sign_Extension__rand_strncpy_68b_badSink();
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_72a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_72a.cpp
index 7f80772..1b32277 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_72a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_73a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_73a.cpp
index bf11d6e..0dd7688 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_73a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_74a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_74a.cpp
index eba207a..148575a 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_74a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_81a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_81a.cpp
index e061b9a..47f1d35 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_81a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE194_Unexpected_Sign_Extension__rand_strncpy_81_base& baseObject = CWE194_Unexpected_Sign_Extension__rand_strncpy_81_bad();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_82a.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_82a.cpp
index 53eeb5e..f09c091 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_82a.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = 0;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
     CWE194_Unexpected_Sign_Extension__rand_strncpy_82_base* baseObject = new CWE194_Unexpected_Sign_Extension__rand_strncpy_82_bad;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad.cpp
index d88b574..5aff1c4 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad::CWE194_Unexpected_Sign_Ex
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad::~CWE194_Unexpected_Sign_Extension__rand_strncpy_83_bad()
diff --git a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad.cpp b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad.cpp
index 1ba72b8..ff925e6 100644
--- a/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad.cpp
+++ b/C/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad.cpp
@@ -24,7 +24,7 @@ CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad::CWE194_Unexpected_Sign_Ex
 {
     data = dataCopy;
     /* FLAW: Use a random value that could be less than 0 */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad::~CWE194_Unexpected_Sign_Extension__rand_strncpy_84_bad()
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_01.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_01.c
index 497a650..b0140ff 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_01.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_01.c
@@ -24,7 +24,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_01_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
         char charData = (char)data;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_02.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_02.c
index e299eb7..1ffd158 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_02.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_02.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_02_bad()
     if(1)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_03.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_03.c
index 5714d15..7db6be9 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_03.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_03.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_03_bad()
     if(5==5)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_04.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_04.c
index 34df7c1..b8ddd9f 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_04.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_04.c
@@ -33,7 +33,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_04_bad()
     if(STATIC_CONST_TRUE)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_05.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_05.c
index c48b003..84db126 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_05.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_05.c
@@ -33,7 +33,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_05_bad()
     if(staticTrue)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_06.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_06.c
index 10e468e..97bbc77 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_06.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_06.c
@@ -30,7 +30,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_06_bad()
     if(STATIC_CONST_FIVE==5)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_07.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_07.c
index 89850c8..4afada8 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_07.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_07.c
@@ -32,7 +32,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_07_bad()
     if(staticFive==5)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_08.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_08.c
index 84ac88f..ec6db27 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_08.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_08.c
@@ -40,7 +40,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_08_bad()
     if(staticReturnsTrue())
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_09.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_09.c
index 07b5055..6f23841 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_09.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_09.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_09_bad()
     if(GLOBAL_CONST_TRUE)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_10.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_10.c
index e9914ea..51900c0 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_10.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_10.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_10_bad()
     if(globalTrue)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_11.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_11.c
index 27eadeb..13beba4 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_11.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_11.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_11_bad()
     if(globalReturnsTrue())
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_12.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_12.c
index 22feac7..e43f775 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_12.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_12.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_12_bad()
     if(globalReturnsTrueOrFalse())
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     else
     {
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_13.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_13.c
index e16d094..e566981 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_13.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_13.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_13_bad()
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_14.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_14.c
index c10c9c7..c9db5a3 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_14.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_14.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_14_bad()
     if(globalFive==5)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_15.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_15.c
index 2d8a0c8..48004fe 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_15.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_15.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_15_bad()
     {
     case 6:
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_16.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_16.c
index 8676841..00c79a5 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_16.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_16.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_16_bad()
     while(1)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
         break;
     }
     {
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c
index b0625d9..b94dfa4 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_17_bad()
     for(i = 0; i < 1; i++)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_18.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_18.c
index 6c77585..92c590c 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_18.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_18.c
@@ -26,7 +26,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_18_bad()
     goto source;
 source:
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     {
         /* POTENTIAL FLAW: Convert data to a char, possibly causing a truncation error */
         char charData = (char)data;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_21.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_21.c
index 740f947..8d2dd16 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_21.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_21.c
@@ -26,7 +26,7 @@ static short badSource(short data)
     if(badStatic)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_22b.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_22b.c
index 0c95132..be3e228 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_22b.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_22b.c
@@ -26,7 +26,7 @@ short CWE197_Numeric_Truncation_Error__short_rand_22_badSource(short data)
     if(CWE197_Numeric_Truncation_Error__short_rand_22_badGlobal)
     {
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
     }
     return data;
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_31.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_31.c
index 94cccfb..f0bb489 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_31.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_31.c
@@ -24,7 +24,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_31_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short dataCopy = data;
         short data = dataCopy;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_32.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_32.c
index 2cf0eec..5b95c71 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_32.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_32.c
@@ -28,7 +28,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_32_bad()
     {
         short data = *dataPtr1;
         /* FLAW: Use a random number */
-        data = (short)RAND32();
+        data = RAND16();
         *dataPtr1 = data;
     }
     {
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_33.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_33.cpp
index 612b146..785ab31 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_33.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_33.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     {
         short data = dataRef;
         {
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_34.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_34.c
index 8f3922f..c3b138e 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_34.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_34.c
@@ -31,7 +31,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_34_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     myUnion.unionFirst = data;
     {
         short data = myUnion.unionSecond;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c
index 6909eeb..9bfe79d 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c
@@ -33,7 +33,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_41_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_41_badSink(data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_42.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_42.c
index 29c048f..94dfe4f 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_42.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_42.c
@@ -21,7 +21,7 @@ Template File: sources-sink-42.tmpl.c
 static short badSource(short data)
 {
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_43.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_43.cpp
index 1951a69..4f30638 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_43.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_43.cpp
@@ -24,7 +24,7 @@ namespace CWE197_Numeric_Truncation_Error__short_rand_43
 static void badSource(short &data)
 {
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 void bad()
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_44.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_44.c
index 63fa11a..b9ea5b7 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_44.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_44.c
@@ -35,7 +35,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_44_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_45.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_45.c
index 5cf78e0..c45f770 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_45.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_45.c
@@ -37,7 +37,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_45_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_45_badData = data;
     badSink();
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_51a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_51a.c
index 8e21bb2..830618f 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_51a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_51a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_51_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_51b_badSink(data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c
index 12b5173..bf7dd17 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_52a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_52_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_52b_badSink(data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_53a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_53a.c
index ebfbe68..e4dee18 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_53a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_53a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_53_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_53b_badSink(data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_54a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_54a.c
index 39aaf00..454fc8d 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_54a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_54a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_54_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_54b_badSink(data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_61b.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_61b.c
index 4c748de..ba84770 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_61b.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_61b.c
@@ -21,7 +21,7 @@ Template File: sources-sink-61b.tmpl.c
 short CWE197_Numeric_Truncation_Error__short_rand_61b_badSource(short data)
 {
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     return data;
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_62b.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_62b.cpp
index 237faf7..4c12ff9 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_62b.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_62b.cpp
@@ -24,7 +24,7 @@ namespace CWE197_Numeric_Truncation_Error__short_rand_62
 void badSource(short &data)
 {
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 #endif /* OMITBAD */
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_63a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_63a.c
index 88f0bc8..4d95ccf 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_63a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_63a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_63_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_63b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_64a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_64a.c
index bdf2174..4349363 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_64a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_64a.c
@@ -27,7 +27,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_64_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_64b_badSink(&data);
 }
 
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_65a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_65a.c
index 645995e..7ebd394 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_65a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_65a.c
@@ -29,7 +29,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_65_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* use the function pointer */
     funcPtr(data);
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_66a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_66a.c
index b1abf79..e9913e7 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_66a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_66a.c
@@ -28,7 +28,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_66_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* put data in array */
     dataArray[2] = data;
     CWE197_Numeric_Truncation_Error__short_rand_66b_badSink(dataArray);
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_67a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_67a.c
index b00f777..7ac6b93 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_67a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_67a.c
@@ -33,7 +33,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_67_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     myStruct.structFirst = data;
     CWE197_Numeric_Truncation_Error__short_rand_67b_badSink(myStruct);
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_68a.c b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_68a.c
index 76dd280..7f61271 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_68a.c
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_68a.c
@@ -30,7 +30,7 @@ void CWE197_Numeric_Truncation_Error__short_rand_68_bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_68_badData = data;
     CWE197_Numeric_Truncation_Error__short_rand_68b_badSink();
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_72a.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_72a.cpp
index 91dd6f2..80e40d2 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_72a.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_72a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a vector */
     dataVector.insert(dataVector.end(), 1, data);
     dataVector.insert(dataVector.end(), 1, data);
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_73a.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_73a.cpp
index 09b983f..9c1f0ed 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_73a.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_73a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a list */
     dataList.push_back(data);
     dataList.push_back(data);
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_74a.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_74a.cpp
index dfc8aa1..933a516 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_74a.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_74a.cpp
@@ -34,7 +34,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     /* Put data in a map */
     dataMap[0] = data;
     dataMap[1] = data;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_81a.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_81a.cpp
index 5263227..45223a0 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_81a.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_81a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     const CWE197_Numeric_Truncation_Error__short_rand_81_base& baseObject = CWE197_Numeric_Truncation_Error__short_rand_81_bad();
     baseObject.action(data);
 }
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_82a.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_82a.cpp
index 9a0f92c..3a6efdf 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_82a.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_82a.cpp
@@ -28,7 +28,7 @@ void bad()
     /* Initialize data */
     data = -1;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
     CWE197_Numeric_Truncation_Error__short_rand_82_base* baseObject = new CWE197_Numeric_Truncation_Error__short_rand_82_bad;
     baseObject->action(data);
     delete baseObject;
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_83_bad.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_83_bad.cpp
index f2e77d0..ca2a618 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_83_bad.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_83_bad.cpp
@@ -24,7 +24,7 @@ CWE197_Numeric_Truncation_Error__short_rand_83_bad::CWE197_Numeric_Truncation_Er
 {
     data = dataCopy;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE197_Numeric_Truncation_Error__short_rand_83_bad::~CWE197_Numeric_Truncation_Error__short_rand_83_bad()
diff --git a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_84_bad.cpp b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_84_bad.cpp
index 0e28b7e..6e562a9 100644
--- a/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_84_bad.cpp
+++ b/C/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_84_bad.cpp
@@ -24,7 +24,7 @@ CWE197_Numeric_Truncation_Error__short_rand_84_bad::CWE197_Numeric_Truncation_Er
 {
     data = dataCopy;
     /* FLAW: Use a random number */
-    data = (short)RAND32();
+    data = RAND16();
 }
 
 CWE197_Numeric_Truncation_Error__short_rand_84_bad::~CWE197_Numeric_Truncation_Error__short_rand_84_bad()
diff --git a/C/testcasesupport/std_testcase.h b/C/testcasesupport/std_testcase.h
index ef72327..5221d5e 100644
--- a/C/testcasesupport/std_testcase.h
+++ b/C/testcasesupport/std_testcase.h
@@ -80,6 +80,8 @@ class OneIntClass
 
 #endif /* end ifndef __cplusplus */
 
+// RAND* definitions removed to avoid overflow-related UB in Frama-C
+#ifndef __FRAMAC__
 /* rand only returns 15 bits, so we xor 3 calls together to get the full result (13 bits overflow, but that is okay) */
 // shifting signed values might overflow and be undefined
 #define URAND31() (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand())
@@ -92,6 +94,12 @@ class OneIntClass
 // choose to produce a positive or a negative number. Note: conditional only evaluates one URAND63
 #define RAND64() ((int64_t)(rand() & 1 ? URAND63() : -URAND63() - 1))
 
+// Frama-C defines the macros below differently
+#define RAND16(x) RAND32(x)
+#define RAND8(x) RAND32(x)
+
+#endif
+
 /* struct used in some test cases as a custom type */
 typedef struct _twoIntsStruct
 {
-- 
2.9.5

